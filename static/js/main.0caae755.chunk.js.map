{"version":3,"sources":["i18n.ts","queries/decoders.ts","queries/constants.ts","utils/randomImage.ts","utils/styles.ts","components/EnterButton/EnterButton.tsx","components/LoginForm/LoginForm.tsx","components/LoginPage/LoginPage.tsx","queries/pingApi.ts","queries/getAuth.ts","components/Dashboard/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","initReactI18next","init","resources","en","translation","welcome","userGreeting","coupleGreeting","kr","fallbackLng","interpolation","escapeValue","authorizeUserDecoder","intersection","type","zip","string","weddingAccess","boolean","receptionAccess","displayName","recordName","id","number","union","familyName","familyNames","array","familyKey","soName","partial","weddingAcceptedCount","weddingDeclinedCount","receptionAcceptedCount","receptionDeclinedCount","rsvpDecoder","acceptCount","declineCount","notes","rsvpVenueDecoder","wedding","reception","foodPreferences","literal","attendeeNames","childrenAttendingCount","userAuthBody","name","API_URL","AUTHORIZE_USER","method","url","input","decoder","v","imageTypeData","square","folderName","itemCount","tall","wide","getUniquesFromRange","rangeMax","numOfUniqs","pipe","range","shuffle","take","palette","EnterButton","onPress","label","onClick","style","borderWidth","borderColor","backgroundColor","height","width","color","fontSize","fontWeight","borderStyle","LoginForm","onSubmit","submitting","t","useTranslation","useState","setFormVals","e","preventDefault","display","flexDirection","justifyContent","marginTop","placeholder","className","inputMode","onChange","target","value","pattern","disabled","cursor","title","LoginPage","loginFormProps","hasClicked","setHasClicked","useEffect","fetch","images","imageCount","imgShape","map","imgNum","process","randomImages","backgroundImage","backgroundSize","backgroundPosition","href","alignItems","textDecoration","textAlign","lineHeight","STORAGE_KEY","useAuth","apiTuple","api","data","undefined","loading","error","fetchData","setFetchData","bodyData","headers","body","JSON","stringify","then","d","json","r","decode","E","message","useApiLazyHook","authorizeUser","prevCreds","window","localStorage","getItem","signIn","setItem","signOut","removeItem","location","reload","results","Dashboard","auth","accepted","declined","App","authData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAiCAA,IACGC,IAAIC,KACJC,KAAK,CACJC,UA9Bc,CAChBC,GAAI,CACFC,YAAa,CACX,oCACE,kEACF,iCAAkC,sBAClCC,QAAS,UACT,kBAAmB,SACnB,sBAAuB,OACvB,qBAAsB,WACtB,yBAA0B,SAC1BC,aAAc,oBACdC,eAAgB,kCAChB,eAAgB,WAChB,mBAAoB,gBACpB,gBAAiB,kBACjB,gBAAiB,OACjB,sBAAuB,SAG3BC,GAAI,CACFJ,YAAa,CACXC,QAAS,8BASXI,YAAa,KAObC,cAAe,CACbC,aAAa,KAIJb,EAAf,E,OAAeA,I,uCClCFc,EAAuBC,YAAa,CAC/CA,YAAa,CACXC,YAAK,CACHC,IAAKC,IACLC,cAAeC,IACfC,gBAAiBD,MAEnBJ,YAAK,CACHM,YAAaJ,IACbK,WAAYL,IACZM,GAAIC,MAENC,YAAM,CACJV,YAAK,IACLA,YAAK,CACHW,WAAYT,IACZU,YAAaC,YAAMX,KACnBY,UAAWZ,MAEbF,YAAK,CAAEe,OAAQb,IAAQY,UAAWZ,UAItCc,YAAQ,CACNC,qBAAsBR,IACtBS,qBAAsBT,IACtBU,uBAAwBV,IACxBW,uBAAwBX,QAItBY,EAAcrB,YAAK,CACvBsB,YAAab,IACbc,aAAcd,IACde,MAAOtB,MAGHuB,EAAmBT,YAAQ,CAC/BU,QAASL,EACTM,UAAW5B,YAAa,CACtBC,YAAK,CACH4B,gBAAiBf,YACfH,YAAM,CACJmB,YAAQ,cACRA,YAAQ,eACRA,YAAQ,WACRA,YAAQ,WAGZC,cAAejB,YAAMX,KACrB6B,uBAAwBtB,MAE1BY,MAIEW,EAAehC,YAAK,CAAEiC,KAAM/B,IAAQD,IAAKC,MClEzCgC,GDoEkBnC,YAAa,CACnC0B,EACAO,EACAhB,YAAQ,CAAEL,WAAYT,QCpElB,oCAyDOiC,EAGT,CACFC,OAAQ,OACRC,IAAI,GAAD,OAAKH,EAAL,iBACHI,MAAO,CAAEL,KAAM,GAAIhC,IAAK,IACxBsC,QAASzC,G,GAUL,GAAD,OAAKoC,EAAL,QAEMM,I,8EC3ELC,EAGF,CACFC,OAAQ,CAAEC,WAAY,SAAUC,UAAW,GAC3CC,KAAM,CAAEF,WAAY,MAAOC,UAAW,GACtCE,KAAM,CAAEH,WAAY,MAAOC,UAAW,IAG3BG,EAAsB,SAACC,GAAD,OAAsB,SACvDC,GADuD,OAGvDC,YACED,GACA,kBAAME,IAAM,EAAGH,KAEfI,IACAC,IAAKJ,MCnBIK,EALc,UAKdA,EAPS,UAOTA,EAFK,UAELA,EAHe,U,OCIfC,EAAyB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAChD,OACE,wBACEC,QAASF,EACTG,MAAO,CAELC,YAAa,EACbC,YAAaP,EACbQ,gBAAiBR,EACjBS,OAAQ,MAERC,MAAO,OACPC,MAAOX,EACPY,SAAU,QACVC,WAAY,OACZC,YAAa,SAbjB,SAgBGX,KCfMY,G,OAAuB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WACvCC,EAAMC,cAAND,EACR,EAAqCE,mBAAS,CAAEzC,KAAM,GAAIhC,IAAK,KAA/D,0BAASgC,EAAT,EAASA,KAAMhC,EAAf,EAAeA,IAAO0E,EAAtB,KAIA,OACE,8BACE,uBACEL,SAAU,SAACM,GACTA,EAAEC,iBACFP,EAAS,CAAErC,OAAMhC,SAEnB0D,MAAO,CACLmB,QAAS,OACTf,OAAQ,OACRgB,cAAe,SACfC,eAAgB,iBATpB,UAYE,iCACE,oBAAIrB,MAAO,CAAEM,MAAOX,EAAa2B,UAAW,OAA5C,SACGT,EAAE,uBAGP,gCACE,8BACE,uBACEU,YAAaV,EAAE,uBACfW,UAAU,aACVnF,KAAK,OACLoF,UAAU,OACVC,SAAU,SAACT,GAAD,OACRD,GAAY,kBAAc,CAAE1E,IAAhB,EAAGA,IAAkBgC,KAAM2C,EAAEU,OAAOC,eAItD,8BACE,uBACEL,YAAaV,EAAE,sBACfW,UAAU,aACVnF,KAAK,OACLwF,QAAQ,SACRJ,UAAU,UACVC,SAAU,SAACT,GAAD,OACRD,GAAY,kBAAe,CAAE1C,KAAjB,EAAGA,KAAoBhC,IAAK2E,EAAEU,OAAOC,kBAKzD,uBACEE,SAAUlB,EACVZ,MAAO,CACLG,gBAAiBR,EACjBS,OAAQ,MACRH,YAAa,EACbI,MAAO,QACPC,MAAOX,EACPY,SAAU,QACVC,WAAY,OACZuB,OAAQ,WAEV1F,KAAK,SACL2F,MAAM,MACNJ,MAAOf,EAAE,mCCjENoB,EAAuB,SAAC,GAA2B,IAAtBC,EAAqB,oBACrDrB,EAAMC,cAAND,EACR,EAAoCE,oBAAS,GAA7C,mBAAOoB,EAAP,KAAmBC,EAAnB,KACAC,qBAAU,WCXiBC,MNQL/D,sCKKnB,IAEH,IAAMgE,EJYoB,eAACC,EAAD,uDAAc,EAAd,OAAoB,SAC9CC,GAD8C,OAG9ClD,YACEiD,EACApD,EAAoBN,EAAc2D,GAAUxD,WAC5CyD,KACE,SAACC,GAAD,gBACKC,GADL,qBACwC9D,EAAc2D,GAAUzD,WADhE,YAC8E2D,EAD9E,aInBWE,CAAa,EAAbA,CAAgB,QAE/B,OACE,8BAUE,sBACErB,UAAU,cACVxB,MAAO,CAAEG,gBAAiBR,GAF5B,UAIE,qBACEK,MAAO,CACLI,OAAQ,OACR0C,gBAAgB,QAAD,OAAUP,EAAO,GAAjB,MACfQ,eAAgB,QAChBC,mBAAoB,YAGvBb,EACC,qBAAKnC,MAAO,CAAEI,OAAQ,QAAtB,SACE,cAAC,EAAD,eAAe8B,MAGjB,oBACEe,KAAK,IACLlD,QAAS,kBAAMqC,GAAc,IAC7BpC,MAAO,CACLmB,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChB6B,WAAY,SAEZC,eAAgB,OAChB7C,MAAOX,EACPQ,gBAAiBR,EAGjBS,OAAQ,QAdZ,UAkBE,wBACA,sBACEJ,MAAO,CACLmB,QAAS,OACTC,cAAe,SACfC,eAAgB,aAChB6B,WAAY,cALhB,UAQE,oBAAGlD,MAAO,CAAEoD,UAAW,OAAQC,WAAY,OAA3C,UACGxC,EAAE,gBACH,uBACCA,EAAE,uBAEL,oBAAIb,MAAO,CAAEqD,WAAY,SAAzB,SAAqCxC,EAAE,mBACvC,oBAAIb,MAAO,CAAEqD,WAAY,SAAzB,SAAqCxC,EAAE,sBAGzC,cAAC,EAAD,CACEhB,QAAS,kBAAMuC,GAAc,IAC7BtC,MAAOe,EAAE,4BAIf,qBACEb,MAAO,CACLI,OAAQ,OACR0C,gBAAgB,QAAD,OAAUP,EAAO,GAAjB,MACfQ,eAAgB,QAChBC,mBAAoB,kBE3F1BM,EAAc,YAEPC,EAAU,WACrB,IAAMC,EPesB,SAC5BC,GASA,MAAkC1C,mBAI/B,CAAE2C,UAAMC,EAAWC,SAAS,EAAOC,WAAOF,IAJ7C,mBAAOG,EAAP,KAAkBC,EAAlB,KAMA,MAAO,CACL,SAACC,GACCD,EAAa,CAAEL,UAAMC,EAAWC,SAAS,EAAMC,WAAOF,IACtDrB,MAAMmB,EAAI/E,IAAK,CACbD,OAAQgF,EAAIhF,OACZwF,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUJ,KAEpBK,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GAAD,OAAOf,EAAI7E,QAAQ6F,OAAOD,MAC/BH,KACCK,KACE,SAACzD,GAAD,OACE8C,EAAa,CACXL,UAAMC,EACNC,SAAS,EACTC,MAAO5C,EAAE,GAAG0D,SAAW,oCAE3B,SAACjB,GAAD,OAAUK,EAAa,CAAEL,OAAME,SAAS,EAAOC,WAAOF,SAI9DG,GOvDec,CAAepG,GAEhC,cAAyCgF,EAAzC,GAAOqB,EAAP,cAAwBnB,KAAxB,EAA8BG,MAO9B,OALAxB,qBAAU,WACR,IAAMyC,EAAYC,OAAOC,aAAaC,QAAQ3B,GAC9CwB,GAAaD,EAAcV,KAAKC,UAAUU,MACzC,IAEI,CACLI,OAAQ,SAACZ,GAEPS,OAAOC,aAAaG,QAAQ7B,EAAaa,KAAKC,UAAUE,IACxDO,EAAcP,IAEhBc,QAAS,WAEPL,OAAOC,aAAaK,WAAW/B,GAC/ByB,OAAOO,SAASC,UAElBC,QAAShC,EAAS,KClBTiC,EAAuB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC7B7E,EAAMC,cAAND,EAER,OACE,gCACE,2CACA,4BAAIA,EAAE,eAAgB,CAAEvC,KAAMoH,EAAK/I,gBAElC+I,EAAKpI,uBACHoI,EAAKpI,qBACJ,iCACGuD,EAAE,oCAAqC,CACtC8E,SAAUD,EAAKpI,qBACfsI,SAAUF,EAAKnI,yBAInB,iCAASsD,EAAE,yCCMNgF,MAtBf,WACE,MAIItC,IAHF2B,EADF,EACEA,OADF,KAEEE,QAFF,EAGEI,SAAiBM,EAHnB,EAGapC,KAAgBE,EAH7B,EAG6BA,QAG7B,OANA,EAGsCC,MAIpC,qBAAKrC,UAAU,MAAf,SAEGsE,EACC,cAAC,EAAD,CAAWJ,KAAMI,IAEjB,cAAC,EAAD,CACEnF,SAAU,SAAC2D,GAAqCY,EAAOZ,IACvD1D,WAAYgD,OCVPmC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0caae755.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\n// the translations\n// (tip move them in a JSON file and import them,\n// or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\nconst resources = {\n  en: {\n    translation: {\n      \"dashboard.updateWeddingRsvpButton\":\n        \"Update Wedding RSVP ({{accepted}}accepted/{{declined}}declined)\",\n      \"dashboard.setWeddingRsvpButton\": \"RSVP to the wedding\",\n      welcome: \"Welcome\",\n      \"loginPage.title\": \"Log In\",\n      \"loginPage.nameInput\": \"Name\",\n      \"loginPage.zipInput\": \"Zip Code\",\n      \"loginPage.submitButton\": \"Log In\",\n      userGreeting: \"Welcome, {{name}}\",\n      coupleGreeting: \"Welcome {{name}} and {{soName}}\",\n      \"welcome.date\": \"10.23.21\",\n      \"welcome.location\": \"Las Vegas, NV\",\n      \"welcome.line1\": \"Jenna (Jieun) &\",\n      \"welcome.line2\": \"Marc\",\n      \"welcome.enterButton\": \"RSVP\",\n    },\n  },\n  kr: {\n    translation: {\n      welcome: \"환영하다\",\n    },\n  },\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    fallbackLng: \"en\",\n    // load: [\"en\", \"kr\"],\n    // lng: \"kr\",\n    // lng: \"en\", // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n    // if you're using a language detector, do not define the lng option\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import {\n  Type,\n  TypeOf,\n  partial,\n  number,\n  intersection,\n  type,\n  string,\n  array,\n  union,\n  boolean,\n  OutputOf,\n  literal,\n} from \"io-ts\";\n\nexport const authorizeUserDecoder = intersection([\n  intersection([\n    type({\n      zip: string,\n      weddingAccess: boolean,\n      receptionAccess: boolean,\n    }),\n    type({\n      displayName: string,\n      recordName: string,\n      id: number,\n    }),\n    union([\n      type({}),\n      type({\n        familyName: string,\n        familyNames: array(string),\n        familyKey: string,\n      }),\n      type({ soName: string, familyKey: string }),\n    ]),\n  ]),\n\n  partial({\n    weddingAcceptedCount: number,\n    weddingDeclinedCount: number,\n    receptionAcceptedCount: number,\n    receptionDeclinedCount: number,\n  }),\n]);\n\nconst rsvpDecoder = type({\n  acceptCount: number,\n  declineCount: number,\n  notes: string,\n});\n\nconst rsvpVenueDecoder = partial({\n  wedding: rsvpDecoder,\n  reception: intersection([\n    type({\n      foodPreferences: array(\n        union([\n          literal(\"vegetarian\"),\n          literal(\"pescetarian\"),\n          literal(\"chicken\"),\n          literal(\"beef\"),\n        ])\n      ),\n      attendeeNames: array(string),\n      childrenAttendingCount: number,\n    }),\n    rsvpDecoder,\n  ]),\n});\n\nconst userAuthBody = type({ name: string, zip: string });\n\nexport const rsvpBody = intersection([\n  rsvpVenueDecoder,\n  userAuthBody,\n  partial({ familyName: string }),\n]);\n","import { Type, OutputOf, void as v } from \"io-ts\";\nimport * as E from \"fp-ts/Either\";\nimport { useState } from \"react\";\nimport { authorizeUserDecoder, rsvpBody } from \"./decoders\";\n\nconst API_URL =\n  process.env[\"NODE_ENV\"] !== \"production\"\n    ? \"//localhost:3000/\"\n    : \"https://wrsvp-api.herokuapp.com/\";\n\nexport const PING_URL = API_URL;\n\ntype Method = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\n\ntype ApiRoute<I, O> = {\n  method: Method;\n  url: string;\n  input: I;\n  decoder: Type<O>;\n};\n\nexport const useApiLazyHook = <R extends ApiRoute<any, any>>(\n  api: R\n): [\n  (bodyData: R[\"input\"]) => void,\n  {\n    data?: OutputOf<R[\"decoder\"]> | undefined;\n    loading: boolean;\n    error?: string | undefined;\n  }\n] => {\n  const [fetchData, setFetchData] = useState<{\n    data?: OutputOf<R[\"decoder\"]>;\n    loading: boolean;\n    error?: string;\n  }>({ data: undefined, loading: false, error: undefined });\n\n  return [\n    (bodyData: R[\"input\"]): void => {\n      setFetchData({ data: undefined, loading: true, error: undefined });\n      fetch(api.url, {\n        method: api.method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(bodyData),\n      })\n        .then((d) => d.json())\n        .then((r) => api.decoder.decode(r))\n        .then(\n          E.matchW(\n            (e) =>\n              setFetchData({\n                data: undefined,\n                loading: false,\n                error: e[0].message || \"Failed to parse api response\",\n              }),\n            (data) => setFetchData({ data, loading: false, error: undefined })\n          )\n        );\n    },\n    fetchData,\n  ];\n};\n\nexport const AUTHORIZE_USER: ApiRoute<\n  { name: string; zip: string },\n  OutputOf<typeof authorizeUserDecoder>\n> = {\n  method: \"POST\",\n  url: `${API_URL}authorizeUser`,\n  input: { name: \"\", zip: \"\" },\n  decoder: authorizeUserDecoder,\n};\n\nexport type AuthData = OutputOf<typeof authorizeUserDecoder>;\n\nexport const RSVP_USER: ApiRoute<\n  OutputOf<typeof rsvpBody>,\n  OutputOf<typeof v>\n> = {\n  method: \"POST\",\n  url: `${API_URL}rsvp`,\n  input: { name: \"\", zip: \"\" },\n  decoder: v,\n};\n","import shuffle from \"lodash/fp/shuffle\";\nimport range from \"lodash/fp/range\";\nimport flow from \"lodash/fp/flow\";\nimport take from \"lodash/fp/take\";\nimport map from \"lodash/fp/map\";\nimport { pipe } from \"fp-ts/function\";\n\ntype ImgShape = \"square\" | \"tall\" | \"wide\";\n\nconst imageTypeData: Record<\n  ImgShape,\n  { folderName: string; itemCount: number }\n> = {\n  square: { folderName: \"square\", itemCount: 9 },\n  tall: { folderName: \"3-2\", itemCount: 5 },\n  wide: { folderName: \"4-3\", itemCount: 6 },\n};\n\nexport const getUniquesFromRange = (rangeMax: number) => (\n  numOfUniqs: number\n): number[] =>\n  pipe(\n    numOfUniqs,\n    () => range(1, rangeMax),\n    // @ts-ignore\n    shuffle,\n    take(numOfUniqs)\n  );\n\nexport const randomImages = (imageCount = 1) => (\n  imgShape: ImgShape\n): string[] =>\n  pipe(\n    imageCount,\n    getUniquesFromRange(imageTypeData[imgShape].itemCount),\n    map(\n      (imgNum) =>\n        `${process.env.PUBLIC_URL}/bgImages/${imageTypeData[imgShape].folderName}/${imgNum}.jpg`\n    )\n  );\n","const eggshellWhite = \"#F4F1DE\";\nconst terraCottaPink = \"#E07A5F\";\nconst independencePurple = \"#3D405B\";\nconst greenSheen = \"#81B29A\";\nconst deepChampagneYellow = \"#F2CC8F\";\nconst roseTaupe = \"#8F5D5D\";\n\nexport const palette = {\n  cta: independencePurple,\n  background: eggshellWhite,\n  secondBackground: terraCottaPink,\n  primary: roseTaupe,\n  secondary: deepChampagneYellow,\n  tertiary: greenSheen,\n};\n","import React, { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { palette } from \"../../utils/styles\";\ninterface Props {\n  onPress: () => void;\n  label: string;\n}\n\nexport const EnterButton: FC<Props> = ({ onPress, label }) => {\n  return (\n    <button\n      onClick={onPress}\n      style={{\n        // borderRadius: \"50%\",\n        borderWidth: 0,\n        borderColor: palette.secondary,\n        backgroundColor: palette.primary,\n        height: \"8vh\",\n        // padding: \"10px\",\n        width: \"100%\",\n        color: palette.background,\n        fontSize: \"1.5em\",\n        fontWeight: \"bold\",\n        borderStyle: \"solid\",\n      }}\n    >\n      {label}\n    </button>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AUTHORIZE_USER, useApiLazyHook } from \"../../queries/constants\";\nimport { palette } from \"../../utils/styles\";\nimport \"./LoginForm.css\";\n\ninterface Props {\n  onSubmit: (values: { name: string; zip: string }) => void;\n  submitting: boolean;\n}\n\nexport const LoginForm: FC<Props> = ({ onSubmit, submitting }) => {\n  const { t } = useTranslation();\n  const [{ name, zip }, setFormVals] = useState({ name: \"\", zip: \"\" });\n  //   const [authorizeUser, { data: authData, error, loading }] =\n  //     useApiLazyHook(AUTHORIZE_USER);\n\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          onSubmit({ name, zip });\n        }}\n        style={{\n          display: \"flex\",\n          height: \"40vh\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <header>\n          <h1 style={{ color: palette.cta, marginTop: \"5vh\" }}>\n            {t(\"loginPage.title\")}\n          </h1>\n        </header>\n        <div>\n          <div>\n            <input\n              placeholder={t(\"loginPage.nameInput\")}\n              className=\"inputField\"\n              type=\"text\"\n              inputMode=\"text\"\n              onChange={(e) =>\n                setFormVals(({ zip }) => ({ zip, name: e.target.value }))\n              }\n            />\n          </div>\n          <div>\n            <input\n              placeholder={t(\"loginPage.zipInput\")}\n              className=\"inputField\"\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              inputMode=\"numeric\"\n              onChange={(e) =>\n                setFormVals(({ name }) => ({ name, zip: e.target.value }))\n              }\n            />\n          </div>\n        </div>\n        <input\n          disabled={submitting}\n          style={{\n            backgroundColor: palette.cta,\n            height: \"8vh\",\n            borderWidth: 0,\n            width: \"100vw\",\n            color: palette.background,\n            fontSize: \"1.5em\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n          }}\n          type=\"submit\"\n          title=\"str\"\n          value={t(\"loginPage.submitButton\") as string}\n          // value={t(\"loginPage.submitButton\")}\n        />\n      </form>\n    </div>\n  );\n};\n","import React, { ComponentProps, FC, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { pingApi } from \"../../queries/pingApi\";\nimport { getUniquesFromRange, randomImages } from \"../../utils/randomImage\";\nimport { palette } from \"../../utils/styles\";\nimport { EnterButton } from \"../EnterButton/EnterButton\";\nimport { LoginForm } from \"../LoginForm/LoginForm\";\n\ntype Props = ComponentProps<typeof LoginForm>;\n\nexport const LoginPage: FC<Props> = ({ ...loginFormProps }) => {\n  const { t } = useTranslation();\n  const [hasClicked, setHasClicked] = useState(false);\n  useEffect(() => {\n    pingApi();\n  }, []);\n\n  const images = randomImages(2)(\"wide\");\n\n  return (\n    <div\n    // style={{\n    //   minHeight: \"75vh\",\n    //   backgroundImage: `url(${process.env.PUBLIC_URL}/geoflowers.png)`,\n    //   backgroundPosition: \"center\",\n    //   backgroundSize: \"contain\",\n    //   backgroundRepeat: \"no-repeat\",\n    //   padding: \"15vh 20px\",\n    // }}\n    >\n      <div\n        className=\"splashEnter\"\n        style={{ backgroundColor: palette.background }}\n      >\n        <div\n          style={{\n            height: \"30vh\",\n            backgroundImage: `url('${images[0]}')`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        />\n        {hasClicked ? (\n          <div style={{ height: \"40vh\" }}>\n            <LoginForm {...loginFormProps} />\n          </div>\n        ) : (\n          <a\n            href=\"#\"\n            onClick={() => setHasClicked(true)}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              // textDecoration: \"none\",\n              textDecoration: \"none\",\n              color: palette.cta,\n              backgroundColor: palette.background,\n              // borderWidth: `0 0 2vh`,\n              // borderBottomColor: palette.primary,\n              height: \"40vh\",\n              // borderStyle: \"solid\",\n            }}\n          >\n            <div />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n              }}\n            >\n              <p style={{ textAlign: \"left\", lineHeight: \"1em\" }}>\n                {t(\"welcome.date\")}\n                <br />\n                {t(\"welcome.location\")}\n              </p>\n              <h1 style={{ lineHeight: \"1.1em\" }}>{t(\"welcome.line1\")}</h1>\n              <h1 style={{ lineHeight: \"1.1em\" }}>{t(\"welcome.line2\")}</h1>\n            </div>\n\n            <EnterButton\n              onPress={() => setHasClicked(true)}\n              label={t(\"welcome.enterButton\")}\n            />\n          </a>\n        )}\n        <div\n          style={{\n            height: \"30vh\",\n            backgroundImage: `url('${images[1]}')`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import { PING_URL } from \"./constants\";\n\nexport const pingApi = () => fetch(PING_URL);\n","import { useEffect } from \"react\";\nimport { AUTHORIZE_USER, useApiLazyHook } from \"./constants\";\n\nconst STORAGE_KEY = \"RSVP_AUTH\";\n\nexport const useAuth = () => {\n  const apiTuple = useApiLazyHook(AUTHORIZE_USER);\n\n  const [authorizeUser, { data, error }] = apiTuple;\n\n  useEffect(() => {\n    const prevCreds = window.localStorage.getItem(STORAGE_KEY);\n    prevCreds && authorizeUser(JSON.stringify(prevCreds) as any);\n  }, []);\n\n  return {\n    signIn: (d: Parameters<typeof authorizeUser>[0]) => {\n      /* signin function */\n      window.localStorage.setItem(STORAGE_KEY, JSON.stringify(d));\n      authorizeUser(d);\n    },\n    signOut: () => {\n      /* signout function */\n      window.localStorage.removeItem(STORAGE_KEY);\n      window.location.reload();\n    },\n    results: apiTuple[1],\n  };\n};\n","import React, { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AuthData } from \"../../queries/constants\";\n\ninterface Props {\n  auth: AuthData;\n}\n\nexport const Dashboard: FC<Props> = ({ auth }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      <p>{t(\"userGreeting\", { name: auth.displayName })}</p>\n\n      {auth.weddingAcceptedCount &&\n        (auth.weddingAcceptedCount ? (\n          <button>\n            {t(\"dashboard.updateWeddingRsvpButton\", {\n              accepted: auth.weddingAcceptedCount,\n              declined: auth.weddingDeclinedCount,\n            })}\n          </button>\n        ) : (\n          <button>{t(\"dashboard.setWeddingRsvpButton\")}</button>\n        ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { LoginPage } from \"./components/LoginPage/LoginPage\";\nimport { useAuth } from \"./queries/getAuth\";\nimport { Dashboard } from \"./components/Dashboard/Dashboard\";\nimport { BgTiles } from \"./components/BgTiles/BgTiles\";\n\nfunction App() {\n  const {\n    signIn,\n    signOut,\n    results: { data: authData, loading, error },\n  } = useAuth();\n\n  return (\n    <div className=\"App\">\n      {/* <BgTiles /> */}\n      {authData ? (\n        <Dashboard auth={authData} />\n      ) : (\n        <LoginPage\n          onSubmit={(d: Parameters<typeof signIn>[0]) => (signIn(d), undefined)}\n          submitting={loading}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./i18n\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}