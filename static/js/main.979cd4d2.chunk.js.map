{"version":3,"sources":["i18n.ts","queries/decoders.ts","queries/constants.ts","utils/randomImage.ts","utils/styles.ts","components/Button/Button.tsx","components/LoginForm/LoginForm.tsx","utils/useWindowSize.ts","components/LoginPage/LoginPage.tsx","queries/pingApi.ts","queries/getAuth.ts","utils/mapLink.ts","components/ReceptionRsvpForm/ReceptionRsvpForm.tsx","components/ReceptionInfo/ReceptionInfo.tsx","components/WeddingRsvpForm/WeddingRsvpForm.tsx","components/WeddingInfo/WeddingInfo.tsx","components/Dashboard/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","initReactI18next","init","resources","en","translation","welcome","userGreeting","coupleGreeting","moreInfo","noInviteeFound","jsonParse","clickForMap","updateRsvp","setRsvp","weddingDescriptionText","logout","cancel","attendingCount","decliningCount","familyMemberName","childrenAttendingCount","kr","fallbackLng","interpolation","escapeValue","authorizeUserDecoder","intersection","type","zip","string","weddingAccess","boolean","receptionAccess","displayName","recordName","id","number","union","familyName","familyNames","array","familyKey","soName","partial","weddingAcceptedCount","weddingDeclinedCount","receptionAcceptedCount","receptionDeclinedCount","rsvpDecoder","acceptCount","declineCount","notes","rsvpVenueDecoder","wedding","reception","foodPreferences","literal","attendeeNames","userAuthBody","name","API_URL","useApiLazyHook","api","t","useTranslation","useState","data","undefined","loading","error","fetchData","setFetchData","bodyData","fetch","url","method","headers","body","JSON","stringify","then","d","status","json","Error","r","decoder","decode","E","e","message","catch","toString","AUTHORIZE_USER","input","RSVP_USER","v","imageTypeData","square","folderName","itemCount","tall","wide","getUniquesFromRange","rangeMax","numOfUniqs","pipe","range","shuffle","take","randomImages","imageCount","imgShape","screenWidth","map","imgNum","process","roseTaupe","palette","Button","label","onPress","color","disabled","className","join","onClick","Wave","style","marginLeft","size","thickness","LoginForm","onSubmit","submitting","setFormVals","width","preventDefault","display","height","flexDirection","justifyContent","placeholder","inputMode","onChange","target","value","pattern","padding","useWindowSize","windowSize","setWindowSize","useEffect","handleResize","debounce","window","innerWidth","innerHeight","addEventListener","removeEventListener","LoginPage","loginFormProps","hasClicked","setHasClicked","images","useMemo","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","href","alignItems","textAlign","lineHeight","STORAGE_KEY","mapsLink","lat","long","navigator","platform","indexOf","ReceptionRsvpForm","auth","onCancel","saving","famNamesCache","setFamNamesCache","rsvpData","setRsvpData","submit","receptionCountMax","length","console","log","marginTop","marginBottom","count","min","max","step","newAcceptCount","parseInt","rsvp","Math","slice","newDeclineCount","inviteeStatus","Array","_","i","names","names_","ReceptionInfo","refetchAuth","showRsvpForm","setShowRsvpForm","rsvpUser","savingRsvp","receptionData","rel","borderRadius","borderWidth","borderColor","borderStyle","WeddingRsvpForm","weddingCountMax","WeddingInfo","showMore","setShowMore","weddingData","margin","borderLeftWidth","borderLeftStyle","borderLeftColor","Dashboard","signout","bgImage","flex","minHeight","App","apiTuple","authorizeUser","userData","setUserData","prevCreds","localStorage","getItem","parsedCreds","parse","setItem","signIn","trim","signOut","removeItem","location","reload","results","useAuth","authData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAkHAA,IACGC,IAAIC,KACJC,KAAK,CACJC,UA/Gc,CAChBC,GAAI,CACFC,YAAa,CACX,oCACE,kEACF,iCAAkC,sBAClCC,QAAS,UACT,kBAAmB,SACnB,sBAAuB,OACvB,qBAAsB,WACtB,yBAA0B,SAC1BC,aAAc,oBACdC,eAAgB,kCAChB,eAAgB,aAChB,mBAAoB,gBACpB,gBAAiB,kBACjB,gBAAiB,OACjB,sBAAuB,OACvB,sBAAuB,YACvB,yBAA0B,mBAC1B,qBAAsB,SACtB,oBAAqB,UACrB,8BAA+B,wBAC/B,mBAAoB,UACpBC,SAAU,YACVC,eACE,6EACFC,UAAW,+BACX,oBAAqB,eACrB,mBAAoB,aACpB,uBAAwB,sBACxBC,YAAa,qBACb,kBAAmB,2BACnBC,WAAY,cACZC,QAAS,YACTC,uBAAuB,0lBAcvBC,OAAQ,SAER,oBAAqB,8BACrB,8BAA+B,kBAC/B,8BAA+B,sBAC/B,qBAAsB,WACtB,sBAAuB,aACvBC,OAAQ,SACR,iBAAkB,QAClBC,eAAgB,6BAChBC,eAAgB,uBAChBC,iBAAkB,gCAClBC,uBAAwB,sCAG5BC,GAAI,CACFjB,YAAa,CACXC,QAAS,iCACT,iCAAkC,sBAClC,kBAAmB,qBACnB,sBAAuB,eACvB,qBAAsB,2BACtB,yBAA0B,qBAC1BC,aAAc,2CACdC,eAAgB,4DAChB,eAAgB,aAChB,mBAAoB,qDACpB,gBAAiB,uBACjB,gBAAiB,kCACjB,sBAAuB,OACvB,sBAAuB,YACvB,yBAA0B,mBAC1B,qBAAsB,uBACtB,oBAAqB,UACrB,8BAA+B,wBAC/B,mBAAoB,wBACpBC,SAAU,kCACVC,eACE,4OACFC,UAAW,+BACX,oBAAqB,eACrB,mBAAoB,aACpB,uBAAwB,sBACxBC,YAAa,qBACb,kBAAmB,2BACnBC,WAAY,oDACZC,QAAS,gEACTC,uBAAuB,grDAOvBC,OAAQ,8BASVO,YAAa,KAObC,cAAe,CACbC,aAAa,KAIJ1B,EAAf,E,OAAeA,I,qCCnHF2B,EAAuBC,YAAa,CAC/CA,YAAa,CACXC,YAAK,CACHC,IAAKC,IACLC,cAAeC,IACfC,gBAAiBD,MAEnBJ,YAAK,CACHM,YAAaJ,IACbK,WAAYL,IACZM,GAAIC,MAENC,YAAM,CACJV,YAAK,IACLA,YAAK,CACHW,WAAYT,IACZU,YAAaC,YAAMX,KACnBY,UAAWZ,MAEbF,YAAK,CAAEe,OAAQb,IAAQY,UAAWZ,UAItCc,YAAQ,CACNC,qBAAsBR,IACtBS,qBAAsBT,IACtBU,uBAAwBV,IACxBW,uBAAwBX,QAItBY,EAAcrB,YAAK,CACvBsB,YAAab,IACbc,aAAcd,IACde,MAAOtB,MAGHuB,EAAmBT,YAAQ,CAC/BU,QAASL,EACTM,UAAW5B,YAAa,CACtBC,YAAK,CACH4B,gBAAiBf,YACfH,YAAM,CACJmB,YAAQ,cACRA,YAAQ,eACRA,YAAQ,WACRA,YAAQ,WAGZC,cAAejB,YAAMX,KACrBT,uBAAwBgB,MAE1BY,MAIEU,EAAe/B,YAAK,CAAEgC,KAAM9B,IAAQD,IAAKC,MCjEzC+B,GDmEkBlC,YAAa,CACnC0B,EACAM,EACAf,YAAQ,CAAEL,WAAYT,QCnElB,oCAaOgC,EAAiB,SAC5BC,GASA,IAAQC,EAAMC,cAAND,EACR,EAAkCE,mBAI/B,CAAEC,UAAMC,EAAWC,SAAS,EAAOC,WAAOF,IAJ7C,mBAAOG,EAAP,KAAkBC,EAAlB,KAMA,MAAO,CACL,SAACC,GAEC,OADAD,EAAa,CAAEL,UAAMC,EAAWC,SAAS,EAAMC,WAAOF,IAC/CM,MAAMX,EAAIY,IAAK,CACpBC,OAAQb,EAAIa,OACZC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,KAEpBQ,MAAK,SAACC,GACL,OAAiB,MAAbA,EAAEC,OACGD,EAAEE,OAEJ,IAAIC,MAAMrB,EAAE,sBAEpBiB,MAAK,SAACK,GAAD,OAAOvB,EAAIwB,QAAQC,OAAOF,MAC/BL,KACCQ,KACE,SAACC,GAAD,OACElB,EAAa,CACXL,UAAMC,EACNC,SAAS,EACTC,MAAOoB,EAAE,GAAGC,SAAW3B,EAAE,uBAE7B,SAACG,GAAD,OAAUK,EAAa,CAAEL,OAAME,SAAS,EAAOC,WAAOF,QAGzDwB,OAAM,SAACF,GAAD,OACLlB,GAAa,iBAAO,CAAEF,MAAOoB,EAAEG,WAAYxB,SAAS,UAG1DE,IAISuB,EAGT,CACFlB,OAAQ,OACRD,IAAI,GAAD,OAAKd,EAAL,iBACHkC,MAAO,CAAEnC,KAAM,GAAI/B,IAAK,IACxB0D,QAAS7D,GAKEsE,EAGT,CACFpB,OAAQ,OACRD,IAAI,GAAD,OAAKd,EAAL,QACHkC,MAAO,CAAEnC,KAAM,GAAI/B,IAAK,IACxB0D,QAASU,K,+ECrFLC,EAGF,CACFC,OAAQ,CAAEC,WAAY,SAAUC,UAAW,GAC3CC,KAAM,CAAEF,WAAY,MAAOC,UAAW,GACtCE,KAAM,CAAEH,WAAY,MAAOC,UAAW,IAG3BG,EAAsB,SAACC,GAAD,OAAsB,SACvDC,GADuD,OAGvDC,YACED,GACA,kBAAME,IAAM,EAAGH,KAEfI,IACAC,IAAKJ,MAGIK,EAAe,eAACC,EAAD,uDAAc,EAAd,OAAoB,SAC9CC,EACAC,GAF8C,OAI9CP,YACEK,EACAR,EAAoBN,EAAce,GAAUZ,WAC5Cc,KACE,SAACC,GAAD,gBACKC,GADL,qBAEInB,EAAce,GAAUb,YAF5B,OAGKc,EAAc,IAAM,SAAW,GAHpC,YAG0CE,EAH1C,cChCAE,EAAY,UAGLC,EANc,UAMdA,EARS,UAQTA,EAPU,UAOVA,EAIFD,EAJEC,EALM,UAKNA,EAQJD,E,kCCEIE,EAAoB,SAAC,GAM3B,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QAII,IAHJC,aAGI,MAHI,YAGJ,EAFJtD,EAEI,EAFJA,QACAuD,EACI,EADJA,SAEA,OACE,yBACEC,UAAW,CAAC,aAAcF,GAAOG,KAAK,KACtCF,WAAYA,EACZG,QAASL,EAHX,UAKGD,EACApD,GACC,cAAC2D,EAAA,EAAD,CACEC,MAAO,CAAEC,WAAY,KACrBC,KAAM,GACNR,MAAOJ,EACPa,UAAW,QCvBRC,EAAuB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,WAAYjE,EAAY,EAAZA,MACnDN,EAAMC,cAAND,EACR,EAAqCE,mBAAS,CAAEN,KAAM,GAAI/B,IAAK,KAA/D,0BAAS+B,EAAT,EAASA,KAAM/B,EAAf,EAAeA,IAAO2G,EAAtB,KAEA,OACE,qBACEP,MAAO,CACLQ,MAAO,QAFX,SAKE,uBACEH,SAAU,SAAC5C,GACTA,EAAEgD,iBACFJ,EAAS,CAAE1E,OAAM/B,SAEnBoG,MAAO,CACLU,QAAS,OACTC,OAAQ,OACRC,cAAe,SACfC,eAAgB,iBATpB,UAYE,iCACE,oBAAIb,MAAO,CAAEN,MAAOJ,GAApB,SAAoCvD,EAAE,uBAExC,gCACE,8BACE,uBACE+E,YAAa/E,EAAE,uBACf6D,UAAU,aACVjG,KAAK,OACLoH,UAAU,OACVC,SAAU,SAACvD,GAAD,OACR8C,GAAY,kBAAc,CAAE3G,IAAhB,EAAGA,IAAkB+B,KAAM8B,EAAEwD,OAAOC,eAItD,8BACE,uBACEJ,YAAa/E,EAAE,sBACf6D,UAAU,aACVjG,KAAK,OACLwH,QAAQ,SACRJ,UAAU,UACVC,SAAU,SAACvD,GAAD,OACR8C,GAAY,kBAAe,CAAE5E,KAAjB,EAAGA,KAAoB/B,IAAK6D,EAAEwD,OAAOC,kBAMxD7E,GACC,sBAAM2D,MAAO,CAAEN,MAAOJ,EAAe8B,QAAS,SAA9C,SACG/E,IAmBL,cAAC,EAAD,CACEsD,SAAUW,IAAe3E,IAAS/B,EAClC8F,MAAO,UAGPD,QAAS,kBAAMY,EAAS,CAAE1E,OAAM/B,SAChC4F,MAAOzD,EAAE,kC,2BCzFNsF,EAAgB,WAG3B,MAAoCpF,mBAGjC,CACDuE,WAAOrE,EACPwE,YAAQxE,IALV,mBAAOmF,EAAP,KAAmBC,EAAnB,KA4BA,OApBAC,qBAAU,WAER,IAAMC,EAAeC,KAAS,WAE5BH,EAAc,CACZf,MAAOmB,OAAOC,WACdjB,OAAQgB,OAAOE,gBAEhB,KASH,OANAF,OAAOG,iBAAiB,SAAUL,GAGlCA,IAGO,kBAAME,OAAOI,oBAAoB,SAAUN,MACjD,IAEIH,GCrBIU,EAAuB,SAAC,GAA2B,IAAtBC,EAAqB,oBACrDlG,EAAMC,cAAND,EACR,EAAoCE,oBAAS,GAA7C,mBAAOiG,EAAP,KAAmBC,EAAnB,KACelD,EAAgBoC,IAAvBb,MAERgB,qBAAU,WChBiB/E,MPSLb,sCMSnB,IAEH,IAAM4E,EAA6BvB,EAC/BA,EAAc,SACd9C,EAEEiG,EAASC,mBACb,kBAAMpD,GAAeH,EAAa,EAAbA,CAAgB,OAAQG,KAC7C,CAACuB,IAGH,OACE,8BAUE,sBACEZ,UAAU,cACVI,MAAO,CAAEsC,gBAAiBhD,GAF5B,UAIE,qBACEM,UAAU,WACVI,MAAO,CACLW,OAAQ,OACR4B,gBAAgB,QAAD,OAAUH,EAASA,EAAO,GAAK,GAA/B,MACfI,eAAgB,QAChBC,mBAAoB,YAGvBP,EACC,qBAAKtC,UAAU,mBAAf,SACE,cAAC,EAAD,eAAeqC,MAGjB,oBACErC,UAAU,mBACV8C,KAAK,IACL5C,QAAS,kBAAMqC,GAAc,IAC7BnC,MAAO,CACLN,MAAOJ,EACPgD,gBAAiBhD,GANrB,UASE,wBACA,sBACEU,MAAO,CACLU,QAAS,OACTE,cAAe,SACfC,eAAgB,aAChB8B,WAAY,cALhB,UAQE,oBACE/C,UAAU,eACVI,MAAO,CAAE4C,UAAW,OAAQC,WAAY,OAF1C,UAIG9G,EAAE,gBACH,uBACCA,EAAE,uBAEL,oBAAIiE,MAAO,CAAE6C,WAAY,SAAzB,SAAqC9G,EAAE,mBACvC,oBAAIiE,MAAO,CAAE6C,WAAY,SAAzB,SAAqC9G,EAAE,sBAOzC,cAAC,EAAD,CACE0D,QAAS,kBAAM0C,GAAc,IAC7B3C,MAAOzD,EAAE,4BAIf,qBACE6D,UAAU,kBACVI,MAAO,CACLuC,gBAAgB,QAAD,OAAUH,EAASA,EAAO,GAAK,GAA/B,eEpGrBU,EAAc,YCHPC,EAAW,SAACC,EAAaC,GACpC,OAE4C,IAA1CC,UAAUC,SAASC,QAAQ,YACa,IAAxCF,UAAUC,SAASC,QAAQ,UACa,IAAxCF,UAAUC,SAASC,QAAQ,QAErB,qCAAN,OAA4CJ,EAA5C,YAAmDC,EAAnD,YAEA,6CAA6CD,EAA7C,YAAoDC,EAApD,a,QCmBSI,EAA+B,SAAC,GAKtC,IAAD,EAJJC,EAII,EAJJA,KACAC,EAGI,EAHJA,SACAlD,EAEI,EAFJA,SACAmD,EACI,EADJA,OAEQzH,EAAMC,cAAND,EACR,EAA0CE,mBAAmB,IAA7D,mBAAOwH,EAAP,KAAsBC,EAAtB,KACA,EAAgCzH,mBAM9B,CACAhB,YAAaqI,EAAKxI,uBAClBI,aAAcoI,EAAKvI,uBACnBI,MAAO,GACPI,gBAAiB,GACjBE,cAAe,GACfrC,uBAAwB,IAZ1B,mBAAOuK,EAAP,KAAiBC,EAAjB,KAeMC,EAAS,kBACbxD,EAAS,2BACJsD,GADG,IAEN1I,YAAa0I,EAAS1I,aAAe,EACrCC,aAAcyI,EAASzI,cAAgB,MAIrC4I,GAAwB,OAAJR,QAAI,IAAJA,GAAA,UAAAA,EAAM/I,mBAAN,eAAmBwJ,SAAU,EAIvD,OAFAC,QAAQC,IAAIN,GAGV,uBAAMtD,SAAUwD,EAAhB,UACE,sBAAK7D,MAAO,CAAEkE,UAAW,GAAIC,aAAc,IAA3C,UAEI,gCACE,gCACE,8BACGpI,EAAE,iBAAkB,CAAEqI,MAAOT,EAAS1I,aAAe,MAExD,uBACEtB,KAAK,QACL0K,IAAI,IACJC,IAAKR,EACLS,KAAK,IACLrD,MAAOyC,EAAS1I,aAAe,EAC/Bd,GAAG,oBACH6G,SAAU,SAACvD,GACT,IAAM+G,EAAiBC,SAAShH,EAAEwD,OAAOC,MAAO,IAChD0C,GAAY,SAACc,GAAD,mBAAC,eACRA,GADO,IAEVzJ,YAAauJ,EACbtJ,aAAcyJ,KAAKN,IACjBP,EAAoBU,EACpBE,EAAKxJ,cAAgB,GAEvBO,cAAegI,EAAcmB,MAAM,EAAGJ,GACtCpL,uBAAwBuL,KAAKL,IAC3B,EACAK,KAAKN,IAAIG,EAAiB,EAAGE,EAAKtL,oCAM5C,gCACE,8BACG2C,EAAE,iBAAkB,CAAEqI,MAAOT,EAASzI,cAAgB,MAEzD,uBACEvB,KAAK,QACL0K,IAAI,IACJC,IAAKR,EACLS,KAAK,IACLrD,MAAOyC,EAASzI,cAAgB,EAChC8F,SAAU,SAACvD,GACT,IAAMoH,EAAkBJ,SAAShH,EAAEwD,OAAOC,MAAO,IAEjD0C,GAAY,SAACc,GACX,IAAMF,EAAiBG,KAAKN,IAC1BP,EAAoBe,EACpBH,EAAKzJ,aAAe,GAEtB,OAAO,2BACFyJ,GADL,IAEExJ,aAAc2J,EACd5J,YAAauJ,EACb/I,cAAegI,EAAcmB,MAAM,EAAGJ,GACtCpL,uBAAwBuL,KAAKL,IAC3B,EACAK,KAAKN,IACHM,KAAKN,IACHG,EAAiB,EACjBE,EAAKtL,qCAWK,YAApB,OAAJkK,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,gBAA8BnB,EAAS1I,aAAe,EAC1D,gCACE,8BACGc,EAAE,yBAA0B,CAC3BqI,MAAOT,EAASvK,2BAGpB,uBACEO,KAAK,QACL0K,IAAI,IACJC,KAAMX,EAAS1I,aAAe,GAAK,EACnCsJ,KAAK,IACLrD,MAAOyC,EAASvK,uBAChB4H,SAAU,SAACvD,GAAD,OACRmG,GAAY,SAACc,GAAD,mBAAC,eACRA,GADO,IAEVtL,uBAAwBqL,SACtBhH,EAAEwD,OAAOC,OAAS,IAClB,eAOV,gCAMR,qBAAKlB,MAAO,CAAEU,QAAS,OAAQE,cAAe,UAA9C,SACG,YAAImE,MAAMpB,EAAS1I,aAAe,IAAIiE,KAAI,SAAC8F,EAAGC,GAAJ,OACzC,uBACEtL,KAAK,OAELuH,OAAoB,OAAbuC,QAAa,IAAbA,OAAA,EAAAA,EAAgBwB,KAAM,GAC7BjE,SAAU,SAACvD,GACTiG,GAAiB,SAACwB,GAChB,IAAMC,EAAM,YAAOD,GAQnB,OANAC,EAAOF,GAAKxH,EAAEwD,OAAOC,MAErB0C,GAAY,SAACc,GAAD,mBAAC,eACRA,GADO,IAEVjJ,cAAe0J,EAAOP,MAAM,EAAGF,EAAKzJ,kBAE/BkK,MAGXrE,YAAa/E,EAAE,mBAAoB,CAAE3B,OAAQ6K,EAAI,KAf5CA,QAoBX,0BACE/D,MAAOyC,EAASxI,MAChB2F,YAAa/E,EAAE,kBACfiF,SAAU,SAACvD,GAAD,OACRmG,GAAY,SAACc,GAAD,mBAAC,eAAeA,GAAhB,IAAsBvJ,MAAOsC,EAAEwD,OAAOC,iBAKxD,cAAC,EAAD,CAAQ1B,MAAOzD,EAAE,UAAW2D,MAAM,SAASD,QAAS8D,IACpD,cAAC,EAAD,CACE/D,MAAOzD,EAAE,uBACT2D,MAAM,UACND,QAASoE,EACTzH,QAASoH,QChMJ4B,EAA2B,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAa/B,EAAW,EAAXA,KAC9CvH,EAAMC,cAAND,EACR,EAAwCE,oBAAS,GAAjD,mBAAOqJ,EAAP,KAAqBC,EAArB,KACA,EAA4C1J,EAAekC,GAA3D,mBAAOyH,EAAP,KAA4BC,EAA5B,KAAmBrJ,QAEnB,OACE,sBACE4D,MAAO,CACLsC,gBAAiBhD,EACjBkB,MAAO,MACPY,QAAS,WAJb,UAOE,6BAAKrF,EAAE,yBACNuJ,EACC,cAAC,EAAD,CACEjF,SAAU,SAACqF,GACT,OAAOF,EAAS,CACd7J,KAAM2H,EAAKpJ,WACXN,IAAK0J,EAAK1J,IACV0B,UAAWoK,IAEV1I,KAAKqI,GACLrI,MAAK,kBAAMuI,GAAgB,OAEhCjC,KAAMA,EACNC,SAAU,kBAAMgC,GAAgB,IAChC/B,OAAQiC,IAGV,qCACE,sBACEzF,MAAO,CACLY,cAAe,MACfF,QAAS,OACTG,eAAgB,SAChB8B,WAAY,SACZwB,aAAc,IANlB,UASE,gCACE,8BAAMpI,EAAE,4BACR,8BAAMA,EAAE,iCACR,8BAAMA,EAAE,oCAEV,8BACE,mBACEkF,OAAO,SACP0E,IAAI,aACJjD,KAAMK,EACJhH,EAAE,sBACFA,EAAE,wBAEJiE,MAAO,CACLsC,gBAAiBhD,EACjB8B,QAAS,GACTnB,WAAY,GACZ2F,aAAc,MACdC,YAAa,EACbC,YAAaxG,EACbyG,YAAa,SAdjB,SAkBGhK,EAAE,sBAIT,sBACEiE,MAAO,CACLU,QAAS,OACTE,cAAe,MACfC,eAAgB,eAChBsD,aAAc,IALlB,UAQE,8BAAMpI,EAAE,kBACR,8BAAMA,EAAE,gCAEwBI,KAA7B,OAAJmH,QAAI,IAAJA,OAAA,EAAAA,EAAMxI,8BAC0BqB,KAA7B,OAAJmH,QAAI,IAAJA,OAAA,EAAAA,EAAMvI,wBACJ,gCACGgB,EAAE,qBACH,cAAC,EAAD,CACEyD,MAAOzD,EAAE,cACT2D,MAAM,YACND,QAAS,kBAAM8F,GAAgB,SAInC,cAAC,EAAD,CACE/F,MAAOzD,EAAE,WACT2D,MAAO,UACPD,QAAS,kBAAM8F,GAAgB,aC1FhCS,GAA6B,SAAC,GAKpC,IAAD,EAJJ1C,EAII,EAJJA,KACAC,EAGI,EAHJA,SACAlD,EAEI,EAFJA,SACAmD,EACI,EADJA,OAEQzH,EAAMC,cAAND,EACR,EAAgCE,mBAG9B,CACAhB,YAAaqI,EAAK1I,qBAClBM,aAAcoI,EAAKzI,qBACnBM,MAAO,KANT,mBAAOwI,EAAP,KAAiBC,EAAjB,KASMC,EAAS,kBACbxD,EAAS,CACPlF,MAAOwI,EAASxI,MAChBF,YAAa0I,EAAS1I,aAAe,EACrCC,aAAcyI,EAASzI,cAAgB,KAIrC+K,GAAsB,OAAJ3C,QAAI,IAAJA,GAAA,UAAAA,EAAM/I,mBAAN,eAAmBwJ,SAAU,EAErD,OACE,uBAAM1D,SAAUwD,EAAhB,UACE,sBAAK7D,MAAO,CAAEkE,UAAW,GAAIC,aAAc,IAA3C,UAEI,gCACE,gCACE,8BACGpI,EAAE,iBAAkB,CAAEqI,MAAOT,EAAS1I,aAAe,MAExD,uBACEtB,KAAK,QACL0K,IAAI,IACJC,IAAK2B,EACL1B,KAAK,IACLrD,MAAOyC,EAAS1I,aAAe,EAC/Bd,GAAG,oBACH6G,SAAU,SAACvD,GAAD,OACRmG,GAAY,SAACc,GAAD,mBAAC,eACRA,GADO,IAEVzJ,YAAawJ,SAAShH,EAAEwD,OAAOC,OAAS,IAAK,IAC7ChG,aAAcyJ,KAAKN,IACjB4B,EAAkBxB,SAAShH,EAAEwD,OAAOC,OAAS,IAAK,IAClDwD,EAAKxJ,cAAgB,cAM/B,gCACE,8BACGa,EAAE,iBAAkB,CAAEqI,MAAOT,EAASzI,cAAgB,MAEzD,uBACEvB,KAAK,QACL0K,IAAI,IACJC,IAAK2B,EACL1B,KAAK,IACLrD,MAAOyC,EAASzI,cAAgB,EAChC8F,SAAU,SAACvD,GAAD,OACRmG,GAAY,SAACc,GAAD,mBAAC,eACRA,GADO,IAEVxJ,aAAcuJ,SAAShH,EAAEwD,OAAOC,OAAS,IAAK,IAC9CjG,YAAa0J,KAAKN,IAChB4B,EAAkBxB,SAAShH,EAAEwD,OAAOC,OAAS,IAAK,IAClDwD,EAAKzJ,aAAe,iBASlC,0BACEiG,MAAOyC,EAASxI,MAChB2F,YAAa/E,EAAE,kBACfiF,SAAU,SAACvD,GAAD,OACRmG,GAAY,SAACc,GAAD,mBAAC,eAAeA,GAAhB,IAAsBvJ,MAAOsC,EAAEwD,OAAOC,iBAKxD,cAAC,EAAD,CAAQ1B,MAAOzD,EAAE,UAAW2D,MAAM,SAASD,QAAS8D,IACpD,cAAC,EAAD,CACE/D,MAAOzD,EAAE,uBACT2D,MAAM,UACND,QAASoE,EACTzH,QAASoH,QC7FJ0C,GAAyB,SAAC,GAA2B,IAAzB5C,EAAwB,EAAxBA,KAAM+B,EAAkB,EAAlBA,YACrCtJ,EAAMC,cAAND,EACR,EAAgCE,oBAAS,GAAzC,mBAAOkK,EAAP,KAAiBC,EAAjB,KACA,EAAwCnK,oBAAS,GAAjD,mBAAOqJ,EAAP,KAAqBC,EAArB,KACA,EAA4C1J,EAAekC,GAA3D,mBAAOyH,EAAP,KAA4BC,EAA5B,KAAmBrJ,QAEnB,OACE,sBACE4D,MAAO,CACLsC,gBAAiBhD,EACjBkB,MAAO,MACPY,QAAS,WAJb,UAOE,6BAAKrF,EAAE,uBAENuJ,EACC,cAAC,GAAD,CACEhC,KAAMA,EACNC,SAAU,kBAAMgC,GAAgB,IAChClF,SAAU,SAACgG,GACT,OAAOb,EAAS,CACd7J,KAAM2H,EAAKpJ,WACXN,IAAK0J,EAAK1J,IACVyB,QAASgL,IAERrJ,KAAKqI,GACLrI,MAAK,kBAAMuI,GAAgB,OAEhC/B,OAAQiC,IAGV,qCACE,sBACEzF,MAAO,CACLY,cAAe,MACfF,QAAS,OACTG,eAAgB,SAChB8B,WAAY,SACZwB,aAAc,IANlB,UASE,gCACE,8BAAMpI,EAAE,iCACR,8BAAMA,EAAE,6BAGV,8BACE,mBACEkF,OAAO,SACP0E,IAAI,aACJjD,KAAMK,EAAShH,EAAE,oBAAqBA,EAAE,sBACxCiE,MAAO,CACLsC,gBAAiBhD,EACjB8B,QAAS,GACTnB,WAAY,GACZ2F,aAAc,MACdC,YAAa,EACbC,YAAaxG,EACbyG,YAAa,SAXjB,SAeGhK,EAAE,sBAIT,sBACEiE,MAAO,CACLU,QAAS,OACTE,cAAe,MACfC,eAAgB,eAChBsD,aAAc,IALlB,UAQE,8BAAMpI,EAAE,kBACR,8BAAMA,EAAE,0BAGRoK,GACA,qBACEnG,MAAO,CACLU,QAAS,OACTE,cAAe,MACfC,eAAgB,YAJpB,SAOE,mBACE6B,KAAK,IACL1C,MAAO,CACLoB,QAAS,mBACT1B,MAAOJ,GAETQ,QAAS,kBAAMsG,GAAY,IAN7B,SAQGrK,EAAE,gBAKRoK,GACC,qBAAKvG,UAAU,oBAAoBI,MAAO,CAAEsG,OAAQ,UAApD,SACE,mBACEtG,MAAO,CACLoB,QAAS,YACTkF,OAAQ,SACRhE,gBAAiBhD,EACjBiH,gBAAiB,EACjBC,gBAAiB,QACjBC,gBAAiBnH,EACjBsD,UAAW,QARf,SAWG7G,EAAE,mCAKuBI,KAA3B,OAAJmH,QAAI,IAAJA,OAAA,EAAAA,EAAM1I,4BACwBuB,KAA3B,OAAJmH,QAAI,IAAJA,OAAA,EAAAA,EAAMzI,sBACJ,gCACGkB,EAAE,mBACH,cAAC,EAAD,CACEyD,MAAOzD,EAAE,cACT2D,MAAM,YACND,QAAS,kBAAM8F,GAAgB,SAInC,cAAC,EAAD,CACE/F,MAAOzD,EAAE,WACT2D,MAAO,UACPD,QAAS,kBAAM8F,GAAgB,aCpIhCmB,GAAuB,SAAC,GAAoC,IAAlCpD,EAAiC,EAAjCA,KAAMqD,EAA2B,EAA3BA,QAAStB,EAAkB,EAAlBA,YAC5CtJ,EAAMC,cAAND,EACOkD,EAAgBoC,IAAvBb,MACRwD,QAAQC,IAAIX,GAEZ,IAAM9C,EAA6BvB,EAC/BA,EAAc,SACd9C,EAEEyK,EAAUvE,mBACd,kBAAMpD,GAAeH,EAAa,EAAbA,CAAgB,OAAQG,KAC7C,CAACuB,IAGH,OACE,sBACER,MAAK,aACHU,QAAS,OACTE,cAAe,SACfC,eAAgB,gBAChB8B,WAAY,SACZL,gBAAiBhD,EAEjBmD,mBAAoB,SACpBD,eAAgB,QAChBqE,KAAM,EACNC,UAAW,SAEPF,EAAU,CAAErE,gBAAgB,OAAD,OAASqE,EAAQ,GAAjB,MAA2B,IAb9D,UAgBE,6BAAK7K,EAAE,eAAgB,CAAEJ,KAAM2H,EAAKrJ,gBAEnCqJ,EAAKxJ,eACJ,qBAAKkG,MAAO,CAAEkE,UAAW,GAAIC,aAAc,IAA3C,SACE,cAAC,GAAD,CAAakB,YAAaA,EAAa/B,KAAMA,MAGhDA,EAAKtJ,iBACJ,qBAAKgG,MAAO,CAAEkE,UAAW,GAAIC,aAAc,IAA3C,SACE,cAAC,EAAD,CAAekB,YAAaA,EAAa/B,KAAMA,MAcnD,cAAC,EAAD,CAAQ5D,MAAM,SAASD,QAAS,kBAAMkH,KAAWnH,MAAOzD,EAAE,gBChCjDgL,OAhCf,WACE,MPFqB,WACrB,IAAMC,EAAWnL,EAAegC,GAEhC,cAAkDmJ,EAAlD,GAAOC,EAAP,YAAwB/K,EAAxB,EAAwBA,KAAMG,EAA9B,EAA8BA,MAAOD,EAArC,EAAqCA,QACrC,EAAgCH,qBAAhC,mBAAOiL,EAAP,KAAiBC,EAAjB,KAuBA,OAnBA3F,qBAAU,WACR,IAAM4F,EAAYzF,OAAO0F,aAAaC,QAAQxE,GAC9C,GAAIsE,EACF,IACE,IAAMG,EAAczK,KAAK0K,MAAMJ,GAG/BG,EAAY5L,MACVsL,EAAcM,GAAavK,MAAK,kBAAMmK,EAAYI,MACpD,MAAO9J,OAEV,IAEH+D,qBAAU,WACJtF,IAASG,IAAUD,GAAW8K,GAChCvF,OAAO0F,aAAaI,QAAQ3E,EAAahG,KAAKC,UAAUmK,MAEzD,CAAChL,EAAMG,EAAOD,EAAS8K,IAEnB,CACLQ,OAAQ,SAACzK,GAIP,OAFAkK,EAAY,CAAExL,KAAMsB,EAAEtB,KAAKgM,OAAQ/N,IAAKqD,EAAErD,IAAI+N,SAEvCV,EAAc,CAAEtL,KAAMsB,EAAEtB,KAAKgM,OAAQ/N,IAAKqD,EAAErD,IAAI+N,SAAUhK,OAC/D,WACE,MAAO,sBAIbiK,QAAS,WAEPjG,OAAO0F,aAAaQ,WAAW/E,GAC/BqE,OAAYhL,GACZwF,OAAOmG,SAASC,UAElBC,QAAShB,EAAS,IOrChBiB,GAJFP,EADF,EACEA,OACAE,EAFF,EAEEA,QAFF,IAIEI,QAAiBE,EAJnB,EAIahM,KAAgBE,EAJ7B,EAI6BA,QAASC,EAJtC,EAIsCA,MAGtC,OACE,qBAAKuD,UAAU,MAAf,SAEGsI,EACC,cAAC,GAAD,CACE7C,YAAa,kBACXqC,EAAO,CAAE/L,KAAMuM,EAAShO,WAAYN,IAAKsO,EAAStO,MAAOoD,MACvD,gBAGJ2J,QAASiB,EACTtE,KAAM4E,IAGR,cAAC,EAAD,CACE7H,SAAU,SAACpD,GAAD,OAAqCyK,EAAOzK,IACtDqD,WAAYlE,EACZC,MAAOA,OCjBF8L,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrL,MAAK,YAAkD,IAA/CsL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.979cd4d2.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\n// the translations\n// (tip move them in a JSON file and import them,\n// or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\nconst resources = {\n  en: {\n    translation: {\n      \"dashboard.updateWeddingRsvpButton\":\n        \"Update Wedding RSVP ({{accepted}}accepted/{{declined}}declined)\",\n      \"dashboard.setWeddingRsvpButton\": \"RSVP to the wedding\",\n      welcome: \"Welcome\",\n      \"loginPage.title\": \"Log In\",\n      \"loginPage.nameInput\": \"Name\",\n      \"loginPage.zipInput\": \"Zip Code\",\n      \"loginPage.submitButton\": \"Log In\",\n      userGreeting: \"Welcome, {{name}}\",\n      coupleGreeting: \"Welcome {{name}} and {{soName}}\",\n      \"welcome.date\": \"10.23.2021\",\n      \"welcome.location\": \"Las Vegas, NV\",\n      \"welcome.line1\": \"Jenna (Jieun) &\",\n      \"welcome.line2\": \"Marc\",\n      \"welcome.enterButton\": \"RSVP\",\n      \"receptionInfo.title\": \"Reception\",\n      \"receptionInfo.location\": \"The Blind Center\",\n      \"receptionInfo.time\": \"5:00pm\",\n      \"weddingInfo.title\": \"Wedding\",\n      \"weddingInfo.weddingLocation\": \"Red Springs Boardwalk\",\n      \"weddingInfo.time\": \"10:00am\",\n      moreInfo: \"More Info\",\n      noInviteeFound:\n        \"Invitee not found- Please try again or reach out directly to Marc or Jenna\",\n      jsonParse: \"Failed to parse api response\",\n      \"weddingVenue.long\": \"-115.4191462\",\n      \"weddingVenue.lat\": \"36.1464701\",\n      \"weddingVenue.address\": \"Las Vegas, NV 89161\",\n      clickForMap: \"🗺️\",\n      \"weddingRsvp.set\": \"Wedding RSVP already set\",\n      updateRsvp: \"Update RSVP\",\n      setRsvp: \"RSVP Here\",\n      weddingDescriptionText: `Our ceremony will be held at the \n      Red Spring boardwalk platform\n      The ceremony will begin promptly at 10:30 AM\n      It will last for about half an hour\n      After parking your car, walk toward the picnic area.\n      Then you will see the boardwalk ahead\n      Please follow the path and\n      arrive at the beautiful outdoor ceremony platform\n      As you will be walking a bit, \n      please consider wearing comfortable shoes for walking\n      You can find the direction to the parking area \n      by googling \"Red Spring Picnic Area\".\n      See you at the wedding.\n      `,\n      logout: \"Logout\",\n\n      \"receptionRsvp.set\": \"Reception RSVP already set:\",\n      \"receptionInfo.address.line1\": \"1001 N Bruce St\",\n      \"receptionInfo.address.line2\": \"Las Vegas, NV 89101\",\n      \"receptionVenue.lat\": \"36.18269\",\n      \"receptionVenue.long\": \"-115.12544\",\n      cancel: \"Cancel\",\n      \"rsvpForm.notes\": \"Notes\",\n      attendingCount: \"Total Attending: {{count}}\",\n      decliningCount: \"Declining: {{count}}\",\n      familyMemberName: \"Full Name of Guest {{number}}\",\n      childrenAttendingCount: \"Children in your party: {{count}}\",\n    },\n  },\n  kr: {\n    translation: {\n      welcome: \"환영합니다\",\n      \"dashboard.setWeddingRsvpButton\": \"RSVP to the wedding\",\n      \"loginPage.title\": \"로그인\",\n      \"loginPage.nameInput\": \"이름\",\n      \"loginPage.zipInput\": \"우편번호\",\n      \"loginPage.submitButton\": \"로그인\",\n      userGreeting: \"환영합니다, {{name}}\",\n      coupleGreeting: \"환영합니다 {{name}}씨, {{soName}}\",\n      \"welcome.date\": \"10.23.2021\",\n      \"welcome.location\": \"라스베가스, 네바다\",\n      \"welcome.line1\": \"서지은 &\",\n      \"welcome.line2\": \"마크 말티노\",\n      \"welcome.enterButton\": \"RSVP\",\n      \"receptionInfo.title\": \"Reception\",\n      \"receptionInfo.location\": \"The Blind Center\",\n      \"receptionInfo.time\": \"오후 5시\",\n      \"weddingInfo.title\": \"Wedding\",\n      \"weddingInfo.weddingLocation\": \"Red Springs Boardwalk\",\n      \"weddingInfo.time\": \"오전 10시\",\n      moreInfo: \"자세히 보기\",\n      noInviteeFound:\n        \"일치하지 않는 이름입니다. 다시 시도해주세요. 혹은 마크 혹은 지은이에게 문의해주십시요\",\n      jsonParse: \"Failed to parse api response\",\n      \"weddingVenue.long\": \"-115.4191462\",\n      \"weddingVenue.lat\": \"36.1464701\",\n      \"weddingVenue.address\": \"Las Vegas, NV 89161\",\n      clickForMap: \"🗺️\",\n      \"weddingRsvp.set\": \"Wedding RSVP already set\",\n      updateRsvp: \"참석여부 수정하기\",\n      setRsvp: \"참석여부를 알려주세요\",\n      weddingDescriptionText: `저희 결혼식은 레드락 국립공원 옆에 위치한 레드 스프링 보드웍 플랫폼에서 진행 될 예정입니다.\n      식은 정확히 오전 10:30에 시작되어 대략 30분 정도 소요될 예정이오니 미리 오셔서 자리에 앉아 기다려 주시길 바랍니다.\n      예식 장소까지는 구글맵 혹은 사용하시는 핸드폰지도 어플에 \"Red Spring Picnic Area\" 라고 치시고 찾아오시면 됩니다. \n      주차장에 차를 주차하신 후, 공원 내 서쪽으로 피크닉 테이블이 보이는 곳으로 쭉 걸어오시면 끝자락에 보드웍으로 들어가는 입구가 보이실겁니다.\n      보드웍을 따라서 쭉 따라 오시면 저희가 식을 올릴 플랫폼이 보이실겁니다.\n      보드웍의 길이는 대략 0.8키로 (0.5마일) 이오니 고려하여 편안한 신발을 신어주시기 바랍니다.\n      그러면 결혼식때 만나요!`,\n      logout: \"로그아웃\",\n    },\n  },\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    fallbackLng: \"en\",\n    // load: [\"en\", \"kr\"],\n    // lng: \"kr\",\n    // lng: \"en\", // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n    // if you're using a language detector, do not define the lng option\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import {\n  Type,\n  TypeOf,\n  partial,\n  number,\n  intersection,\n  type,\n  string,\n  array,\n  union,\n  boolean,\n  OutputOf,\n  literal,\n} from \"io-ts\";\n\nexport const authorizeUserDecoder = intersection([\n  intersection([\n    type({\n      zip: string,\n      weddingAccess: boolean,\n      receptionAccess: boolean,\n    }),\n    type({\n      displayName: string,\n      recordName: string,\n      id: number,\n    }),\n    union([\n      type({}),\n      type({\n        familyName: string,\n        familyNames: array(string),\n        familyKey: string,\n      }),\n      type({ soName: string, familyKey: string }),\n    ]),\n  ]),\n\n  partial({\n    weddingAcceptedCount: number,\n    weddingDeclinedCount: number,\n    receptionAcceptedCount: number,\n    receptionDeclinedCount: number,\n  }),\n]);\n\nconst rsvpDecoder = type({\n  acceptCount: number,\n  declineCount: number,\n  notes: string,\n});\n\nconst rsvpVenueDecoder = partial({\n  wedding: rsvpDecoder,\n  reception: intersection([\n    type({\n      foodPreferences: array(\n        union([\n          literal(\"vegetarian\"),\n          literal(\"pescetarian\"),\n          literal(\"chicken\"),\n          literal(\"beef\"),\n        ])\n      ),\n      attendeeNames: array(string),\n      childrenAttendingCount: number,\n    }),\n    rsvpDecoder,\n  ]),\n});\n\nconst userAuthBody = type({ name: string, zip: string });\n\nexport const rsvpBody = intersection([\n  rsvpVenueDecoder,\n  userAuthBody,\n  partial({ familyName: string }),\n]);\n","import { Type, OutputOf, void as v } from \"io-ts\";\nimport * as E from \"fp-ts/Either\";\nimport { useState } from \"react\";\nimport { authorizeUserDecoder, rsvpBody } from \"./decoders\";\nimport { useTranslation } from \"react-i18next\";\n\nconst API_URL =\n  process.env[\"NODE_ENV\"] !== \"production\"\n    ? \"//localhost:3000/\"\n    : \"https://wrsvp-api.herokuapp.com/\";\n\nexport const PING_URL = API_URL;\n\ntype Method = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\n\ntype ApiRoute<I, O> = {\n  method: Method;\n  url: string;\n  input: I;\n  decoder: Type<O>;\n};\n\nexport const useApiLazyHook = <R extends ApiRoute<any, any>>(\n  api: R\n): [\n  (bodyData: R[\"input\"]) => Promise<void>,\n  {\n    data?: OutputOf<R[\"decoder\"]> | undefined;\n    loading: boolean;\n    error?: string | undefined;\n  }\n] => {\n  const { t } = useTranslation();\n  const [fetchData, setFetchData] = useState<{\n    data?: OutputOf<R[\"decoder\"]>;\n    loading: boolean;\n    error?: string;\n  }>({ data: undefined, loading: false, error: undefined });\n\n  return [\n    (bodyData: R[\"input\"]): Promise<void> => {\n      setFetchData({ data: undefined, loading: true, error: undefined });\n      return fetch(api.url, {\n        method: api.method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(bodyData),\n      })\n        .then((d) => {\n          if (d.status === 200) {\n            return d.json();\n          }\n          return new Error(t(\"noInviteeFound\"));\n        })\n        .then((r) => api.decoder.decode(r))\n        .then(\n          E.matchW(\n            (e) =>\n              setFetchData({\n                data: undefined,\n                loading: false,\n                error: e[0].message || t(\"noInviteeFound\"),\n              }),\n            (data) => setFetchData({ data, loading: false, error: undefined })\n          )\n        )\n        .catch((e) =>\n          setFetchData(() => ({ error: e.toString(), loading: false }))\n        );\n    },\n    fetchData,\n  ];\n};\n\nexport const AUTHORIZE_USER: ApiRoute<\n  { name: string; zip: string },\n  OutputOf<typeof authorizeUserDecoder>\n> = {\n  method: \"POST\",\n  url: `${API_URL}authorizeUser`,\n  input: { name: \"\", zip: \"\" },\n  decoder: authorizeUserDecoder,\n};\n\nexport type AuthData = OutputOf<typeof authorizeUserDecoder>;\n\nexport const RSVP_USER: ApiRoute<\n  OutputOf<typeof rsvpBody>,\n  OutputOf<typeof v>\n> = {\n  method: \"POST\",\n  url: `${API_URL}rsvp`,\n  input: { name: \"\", zip: \"\" },\n  decoder: v,\n};\n","import shuffle from \"lodash/fp/shuffle\";\nimport range from \"lodash/fp/range\";\nimport flow from \"lodash/fp/flow\";\nimport take from \"lodash/fp/take\";\nimport map from \"lodash/fp/map\";\nimport { pipe } from \"fp-ts/function\";\n\ntype ImgShape = \"square\" | \"tall\" | \"wide\";\n\nconst imageTypeData: Record<\n  ImgShape,\n  { folderName: string; itemCount: number }\n> = {\n  square: { folderName: \"square\", itemCount: 9 },\n  tall: { folderName: \"3-2\", itemCount: 5 },\n  wide: { folderName: \"4-3\", itemCount: 6 },\n};\n\nexport const getUniquesFromRange = (rangeMax: number) => (\n  numOfUniqs: number\n): number[] =>\n  pipe(\n    numOfUniqs,\n    () => range(1, rangeMax),\n    // @ts-ignore\n    shuffle,\n    take(numOfUniqs)\n  );\n\nexport const randomImages = (imageCount = 1) => (\n  imgShape: ImgShape,\n  screenWidth: number\n): string[] =>\n  pipe(\n    imageCount,\n    getUniquesFromRange(imageTypeData[imgShape].itemCount),\n    map(\n      (imgNum) =>\n        `${process.env.PUBLIC_URL}/bgImages/${\n          imageTypeData[imgShape].folderName\n        }${screenWidth < 500 ? \"/small\" : \"\"}/${imgNum}.jpg`\n    )\n  );\n","const eggshellWhite = \"#F4F1DE\";\nconst terraCottaPink = \"#EAB69F\";\nconst independencePurple = \"#3D405B\";\nconst greenSheen = \"#81B29A\";\nconst deepChampagneYellow = \"#F2CC8F\";\nconst roseTaupe = \"#8F5D5D\";\nconst battleshipGray = \"#8C8C8C\";\n\nexport const palette = {\n  cta: independencePurple,\n  background: eggshellWhite,\n  secondBackground: terraCottaPink,\n  primary: roseTaupe,\n  secondary: deepChampagneYellow,\n  tertiary: greenSheen,\n  disabled: battleshipGray,\n  error: roseTaupe,\n};\n","import React, { FC } from \"react\";\nimport { Wave } from \"react-css-spinners\";\nimport { palette } from \"../../utils/styles\";\nimport \"./Button.css\";\n\ninterface Props {\n  label: string;\n  onPress: () => void;\n  color?: \"primary\" | \"secondary\" | \"cancel\";\n  loading?: boolean;\n  disabled?: boolean;\n}\nconst buttonColors = {\n  primary: palette.cta,\n  secondary: palette.primary,\n  cancel: palette.error,\n} as const;\n\nexport const Button: FC<Props> = ({\n  label,\n  onPress,\n  color = \"secondary\",\n  loading,\n  disabled,\n}) => {\n  return (\n    <button\n      className={[\"rsvpButton\", color].join(\" \")}\n      disabled={!!disabled}\n      onClick={onPress}\n    >\n      {label}\n      {loading && (\n        <Wave\n          style={{ marginLeft: 7.5 }}\n          size={25}\n          color={palette.background}\n          thickness={3}\n        />\n      )}\n    </button>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AUTHORIZE_USER, useApiLazyHook } from \"../../queries/constants\";\nimport { palette } from \"../../utils/styles\";\nimport \"./LoginForm.css\";\nimport { Wave } from \"react-css-spinners\";\nimport { Button } from \"../Button/Button\";\n\ninterface Props {\n  onSubmit: (values: { name: string; zip: string }) => void;\n  submitting: boolean;\n  error?: string;\n}\n\nexport const LoginForm: FC<Props> = ({ onSubmit, submitting, error }) => {\n  const { t } = useTranslation();\n  const [{ name, zip }, setFormVals] = useState({ name: \"\", zip: \"\" });\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n      }}\n    >\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          onSubmit({ name, zip });\n        }}\n        style={{\n          display: \"flex\",\n          height: \"40vh\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <header>\n          <h1 style={{ color: palette.cta }}>{t(\"loginPage.title\")}</h1>\n        </header>\n        <div>\n          <div>\n            <input\n              placeholder={t(\"loginPage.nameInput\")}\n              className=\"inputField\"\n              type=\"text\"\n              inputMode=\"text\"\n              onChange={(e) =>\n                setFormVals(({ zip }) => ({ zip, name: e.target.value }))\n              }\n            />\n          </div>\n          <div>\n            <input\n              placeholder={t(\"loginPage.zipInput\")}\n              className=\"inputField\"\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              inputMode=\"numeric\"\n              onChange={(e) =>\n                setFormVals(({ name }) => ({ name, zip: e.target.value }))\n              }\n            />\n          </div>\n        </div>\n\n        {error && (\n          <span style={{ color: palette.error, padding: \"0 5vw\" }}>\n            {error}\n          </span>\n        )}\n        {/* <button\n          disabled={submitting || !name || !zip}\n          style={{ backgroundColor: palette.cta, color: palette.background }}\n          className=\"loginButton\"\n          onClick={() => onSubmit({ name, zip })}\n        >\n          {t(\"loginPage.submitButton\") as string}\n          {submitting && (\n            <Wave\n              style={{ marginLeft: 7.5 }}\n              size={25}\n              color={palette.background}\n              thickness={3}\n            />\n          )}\n        </button> */}\n        <Button\n          disabled={submitting || !name || !zip}\n          color={\"primary\"}\n          // style={{ backgroundColor: palette.cta, color: palette.background }}\n          // className=\"loginButton\"\n          onPress={() => onSubmit({ name, zip })}\n          label={t(\"loginPage.submitButton\") as string}\n        />\n      </form>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport debounce from \"lodash/debounce\";\n\nexport const useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<{\n    width: number | undefined;\n    height: number | undefined;\n  }>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    const handleResize = debounce(function () {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }, 500);\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n};\n","import React, { ComponentProps, FC, useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { pingApi } from \"../../queries/pingApi\";\nimport { getUniquesFromRange, randomImages } from \"../../utils/randomImage\";\nimport { palette } from \"../../utils/styles\";\nimport { EnterButton } from \"../EnterButton/EnterButton\";\nimport { LoginForm } from \"../LoginForm/LoginForm\";\nimport \"./LoginPage.css\";\nimport { Button } from \"../Button/Button\";\nimport { useWindowSize } from \"../../utils/useWindowSize\";\n\ntype Props = ComponentProps<typeof LoginForm>;\n\nexport const LoginPage: FC<Props> = ({ ...loginFormProps }) => {\n  const { t } = useTranslation();\n  const [hasClicked, setHasClicked] = useState(false);\n  const { width: screenWidth } = useWindowSize();\n\n  useEffect(() => {\n    pingApi();\n  }, []);\n\n  const width: boolean | undefined = screenWidth\n    ? screenWidth > 500\n    : undefined;\n\n  const images = useMemo(\n    () => screenWidth && randomImages(2)(\"wide\", screenWidth),\n    [width]\n  );\n\n  return (\n    <div\n    // style={{\n    //   minHeight: \"75vh\",\n    //   backgroundImage: `url(${process.env.PUBLIC_URL}/geoflowers.png)`,\n    //   backgroundPosition: \"center\",\n    //   backgroundSize: \"contain\",\n    //   backgroundRepeat: \"no-repeat\",\n    //   padding: \"15vh 20px\",\n    // }}\n    >\n      <div\n        className=\"splashEnter\"\n        style={{ backgroundColor: palette.background }}\n      >\n        <div\n          className=\"topImage\"\n          style={{\n            height: \"30vh\",\n            backgroundImage: `url('${images ? images[0] : \"\"}')`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        />\n        {hasClicked ? (\n          <div className=\"loginPageContent\">\n            <LoginForm {...loginFormProps} />\n          </div>\n        ) : (\n          <a\n            className=\"loginPageContent\"\n            href=\"#\"\n            onClick={() => setHasClicked(true)}\n            style={{\n              color: palette.cta,\n              backgroundColor: palette.background,\n            }}\n          >\n            <div />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n              }}\n            >\n              <p\n                className=\"dateLocation\"\n                style={{ textAlign: \"left\", lineHeight: \"1em\" }}\n              >\n                {t(\"welcome.date\")}\n                <br />\n                {t(\"welcome.location\")}\n              </p>\n              <h1 style={{ lineHeight: \"1.1em\" }}>{t(\"welcome.line1\")}</h1>\n              <h1 style={{ lineHeight: \"1.1em\" }}>{t(\"welcome.line2\")}</h1>\n            </div>\n\n            {/* <EnterButton\n              onPress={() => setHasClicked(true)}\n              label={t(\"welcome.enterButton\")}\n            /> */}\n            <Button\n              onPress={() => setHasClicked(true)}\n              label={t(\"welcome.enterButton\")}\n            />\n          </a>\n        )}\n        <div\n          className=\"backgroundImage\"\n          style={{\n            backgroundImage: `url('${images ? images[1] : \"\"}')`,\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import { PING_URL } from \"./constants\";\n\nexport const pingApi = () => fetch(PING_URL);\n","import { useEffect, useState } from \"react\";\nimport { AUTHORIZE_USER, useApiLazyHook } from \"./constants\";\n\nconst STORAGE_KEY = \"RSVP_AUTH\";\n\nexport const useAuth = () => {\n  const apiTuple = useApiLazyHook(AUTHORIZE_USER);\n\n  const [authorizeUser, { data, error, loading }] = apiTuple;\n  const [userData, setUserData] = useState<\n    undefined | Parameters<typeof authorizeUser>[0]\n  >();\n\n  useEffect(() => {\n    const prevCreds = window.localStorage.getItem(STORAGE_KEY);\n    if (prevCreds) {\n      try {\n        const parsedCreds = JSON.parse(prevCreds) as Parameters<\n          typeof authorizeUser\n        >[0];\n        parsedCreds.name &&\n          authorizeUser(parsedCreds).then(() => setUserData(parsedCreds));\n      } catch (e) {}\n    }\n  }, []);\n\n  useEffect(() => {\n    if (data && !error && !loading && userData) {\n      window.localStorage.setItem(STORAGE_KEY, JSON.stringify(userData));\n    }\n  }, [data, error, loading, userData]);\n\n  return {\n    signIn: (d: Parameters<typeof authorizeUser>[0]) => {\n      /* signin function */\n      setUserData({ name: d.name.trim(), zip: d.zip.trim() });\n\n      return authorizeUser({ name: d.name.trim(), zip: d.zip.trim() }).catch(\n        () => {\n          return \"error loging in\";\n        }\n      );\n    },\n    signOut: () => {\n      /* signout function */\n      window.localStorage.removeItem(STORAGE_KEY);\n      setUserData(undefined);\n      window.location.reload();\n    },\n    results: apiTuple[1],\n  };\n};\n","export const mapsLink = (lat: string, long: string) => {\n  if (\n    /* if we're on iOS, open in Apple Maps */\n    navigator.platform.indexOf(\"iPhone\") !== -1 ||\n    navigator.platform.indexOf(\"iPad\") !== -1 ||\n    navigator.platform.indexOf(\"iPod\") !== -1\n  )\n    return `maps://maps.google.com/maps?daddr=${lat},${long}&amp;ll=`;\n  /* else use Google */ else\n    return `https://maps.google.com/maps?daddr=${lat},${long}&amp;ll=`;\n};\n","import { OutputOf } from \"io-ts\";\nimport { FC, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AuthData } from \"../../queries/constants\";\nimport { rsvpBody } from \"../../queries/decoders\";\nimport { Button } from \"../Button/Button\";\n\nexport type ReceptionFormData = NonNullable<\n  OutputOf<typeof rsvpBody>[\"reception\"]\n>;\n/*\ntype ReceptionFormData = {\n    foodPreferences: (\"vegetarian\" | \"pescetarian\" | \"chicken\" | \"beef\")[];\n    attendeeNames: string[];\n    childrenAttendingCount: number;\n} & {\n    acceptCount: number;\n    declineCount: number;\n    notes: string;\n}*/\n\ninterface Props {\n  auth: AuthData;\n  onCancel: () => void;\n  onSubmit: (values: ReceptionFormData) => void;\n  saving: boolean;\n}\n\nexport const ReceptionRsvpForm: FC<Props> = ({\n  auth,\n  onCancel,\n  onSubmit,\n  saving,\n}) => {\n  const { t } = useTranslation();\n  const [famNamesCache, setFamNamesCache] = useState<string[]>([]);\n  const [rsvpData, setRsvpData] = useState<\n    Partial<Pick<ReceptionFormData, \"acceptCount\" | \"declineCount\">> &\n      Pick<\n        ReceptionFormData,\n        \"notes\" | \"attendeeNames\" | \"childrenAttendingCount\" | \"foodPreferences\"\n      >\n  >({\n    acceptCount: auth.receptionAcceptedCount,\n    declineCount: auth.receptionDeclinedCount,\n    notes: \"\",\n    foodPreferences: [],\n    attendeeNames: [],\n    childrenAttendingCount: 0,\n  });\n\n  const submit = () =>\n    onSubmit({\n      ...rsvpData,\n      acceptCount: rsvpData.acceptCount || 0,\n      declineCount: rsvpData.declineCount || 0,\n    });\n\n  // @ts-ignore\n  const receptionCountMax = auth?.familyNames?.length || 2;\n\n  console.log(rsvpData);\n\n  return (\n    <form onSubmit={submit}>\n      <div style={{ marginTop: 10, marginBottom: 10 }}>\n        {\n          <div>\n            <div>\n              <div>\n                {t(\"attendingCount\", { count: rsvpData.acceptCount || 0 })}\n              </div>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max={receptionCountMax}\n                step=\"1\"\n                value={rsvpData.acceptCount || 0}\n                id=\"acceptCountCouple\"\n                onChange={(e) => {\n                  const newAcceptCount = parseInt(e.target.value, 10);\n                  setRsvpData((rsvp) => ({\n                    ...rsvp,\n                    acceptCount: newAcceptCount,\n                    declineCount: Math.min(\n                      receptionCountMax - newAcceptCount,\n                      rsvp.declineCount || 0\n                    ),\n                    attendeeNames: famNamesCache.slice(0, newAcceptCount),\n                    childrenAttendingCount: Math.max(\n                      0,\n                      Math.min(newAcceptCount - 1, rsvp.childrenAttendingCount)\n                    ),\n                  }));\n                }}\n              />\n            </div>\n            <div>\n              <div>\n                {t(\"decliningCount\", { count: rsvpData.declineCount || 0 })}\n              </div>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max={receptionCountMax}\n                step=\"1\"\n                value={rsvpData.declineCount || 0}\n                onChange={(e) => {\n                  const newDeclineCount = parseInt(e.target.value, 10);\n\n                  setRsvpData((rsvp) => {\n                    const newAcceptCount = Math.min(\n                      receptionCountMax - newDeclineCount,\n                      rsvp.acceptCount || 0\n                    );\n                    return {\n                      ...rsvp,\n                      declineCount: newDeclineCount,\n                      acceptCount: newAcceptCount,\n                      attendeeNames: famNamesCache.slice(0, newAcceptCount),\n                      childrenAttendingCount: Math.max(\n                        0,\n                        Math.min(\n                          Math.min(\n                            newAcceptCount - 1,\n                            rsvp.childrenAttendingCount\n                          )\n                        )\n                      ),\n                    };\n                  });\n                }}\n              />\n            </div>\n            {\n              // @ts-ignore\n              auth?.inviteeStatus === \"family\" && rsvpData.acceptCount >= 2 ? (\n                <div>\n                  <div>\n                    {t(\"childrenAttendingCount\", {\n                      count: rsvpData.childrenAttendingCount,\n                    })}\n                  </div>\n                  <input\n                    type=\"range\"\n                    min=\"0\"\n                    max={(rsvpData.acceptCount || 1) - 1}\n                    step=\"1\"\n                    value={rsvpData.childrenAttendingCount}\n                    onChange={(e) =>\n                      setRsvpData((rsvp) => ({\n                        ...rsvp,\n                        childrenAttendingCount: parseInt(\n                          e.target.value || \"0\",\n                          10\n                        ),\n                      }))\n                    }\n                  />\n                </div>\n              ) : (\n                <></>\n              )\n            }\n          </div>\n        }\n\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          {[...Array(rsvpData.acceptCount || 0)].map((_, i) => (\n            <input\n              type=\"text\"\n              key={i}\n              value={famNamesCache?.[i] || \"\"}\n              onChange={(e) => {\n                setFamNamesCache((names) => {\n                  const names_ = [...names];\n\n                  names_[i] = e.target.value;\n\n                  setRsvpData((rsvp) => ({\n                    ...rsvp,\n                    attendeeNames: names_.slice(0, rsvp.acceptCount),\n                  }));\n                  return names_;\n                });\n              }}\n              placeholder={t(\"familyMemberName\", { number: i + 1 })}\n            />\n          ))}\n        </div>\n\n        <textarea\n          value={rsvpData.notes}\n          placeholder={t(\"rsvpForm.notes\")}\n          onChange={(e) =>\n            setRsvpData((rsvp) => ({ ...rsvp, notes: e.target.value }))\n          }\n        />\n      </div>\n\n      <Button label={t(\"cancel\")} color=\"cancel\" onPress={onCancel} />\n      <Button\n        label={t(\"welcome.enterButton\")}\n        color=\"primary\"\n        onPress={submit}\n        loading={saving}\n      />\n    </form>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AuthData, RSVP_USER, useApiLazyHook } from \"../../queries/constants\";\nimport { mapsLink } from \"../../utils/mapLink\";\nimport { palette } from \"../../utils/styles\";\nimport { Button } from \"../Button/Button\";\nimport { ReceptionRsvpForm } from \"../ReceptionRsvpForm/ReceptionRsvpForm\";\n\ninterface Props {\n  auth: AuthData;\n  refetchAuth: () => Promise<void> | void;\n}\n\nexport const ReceptionInfo: FC<Props> = ({ refetchAuth, auth }) => {\n  const { t } = useTranslation();\n  const [showRsvpForm, setShowRsvpForm] = useState(false);\n  const [rsvpUser, { loading: savingRsvp }] = useApiLazyHook(RSVP_USER);\n\n  return (\n    <div\n      style={{\n        backgroundColor: palette.secondBackground,\n        width: \"90%\",\n        padding: \"5px 0 0\",\n      }}\n    >\n      <h2>{t(\"receptionInfo.title\")}</h2>\n      {showRsvpForm ? (\n        <ReceptionRsvpForm\n          onSubmit={(receptionData) => {\n            return rsvpUser({\n              name: auth.recordName,\n              zip: auth.zip,\n              reception: receptionData,\n            })\n              .then(refetchAuth)\n              .then(() => setShowRsvpForm(false));\n          }}\n          auth={auth}\n          onCancel={() => setShowRsvpForm(false)}\n          saving={savingRsvp}\n        />\n      ) : (\n        <>\n          <div\n            style={{\n              flexDirection: \"row\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginBottom: 15,\n            }}\n          >\n            <div>\n              <div>{t(\"receptionInfo.location\")}</div>\n              <div>{t(\"receptionInfo.address.line1\")}</div>\n              <div>{t(\"receptionInfo.address.line2\")}</div>\n            </div>\n            <div>\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={mapsLink(\n                  t(\"receptionVenue.lat\"),\n                  t(\"receptionVenue.long\")\n                )}\n                style={{\n                  backgroundColor: palette.background,\n                  padding: 10,\n                  marginLeft: 10,\n                  borderRadius: \"50%\",\n                  borderWidth: 3,\n                  borderColor: palette.tertiary,\n                  borderStyle: \"solid\",\n                  //   boxShadow: \"2px 2px 4px rgba(0,0,0,.5)\",\n                }}\n              >\n                {t(\"clickForMap\")}\n              </a>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n              marginBottom: 15,\n            }}\n          >\n            <div>{t(\"welcome.date\")}</div>\n            <div>{t(\"receptionInfo.time\")}</div>\n          </div>\n          {auth?.receptionAcceptedCount !== undefined &&\n          auth?.receptionDeclinedCount !== undefined ? (\n            <div>\n              {t(\"receptionRsvp.set\")}\n              <Button\n                label={t(\"updateRsvp\")}\n                color=\"secondary\"\n                onPress={() => setShowRsvpForm(true)}\n              />\n            </div>\n          ) : (\n            <Button\n              label={t(\"setRsvp\")}\n              color={\"primary\"}\n              onPress={() => setShowRsvpForm(true)}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n","import { OutputOf } from \"io-ts\";\nimport { FC, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AuthData } from \"../../queries/constants\";\nimport { rsvpBody } from \"../../queries/decoders\";\nimport { Button } from \"../Button/Button\";\n\nexport type WeddingFormData = NonNullable<OutputOf<typeof rsvpBody>[\"wedding\"]>;\n\ninterface Props {\n  auth: AuthData;\n  onCancel: () => void;\n  onSubmit: (values: WeddingFormData) => void;\n  saving: boolean;\n}\n\nexport const WeddingRsvpForm: FC<Props> = ({\n  auth,\n  onCancel,\n  onSubmit,\n  saving,\n}) => {\n  const { t } = useTranslation();\n  const [rsvpData, setRsvpData] = useState<\n    Partial<Pick<WeddingFormData, \"acceptCount\" | \"declineCount\">> &\n      Pick<WeddingFormData, \"notes\">\n  >({\n    acceptCount: auth.weddingAcceptedCount,\n    declineCount: auth.weddingDeclinedCount,\n    notes: \"\",\n  });\n\n  const submit = () =>\n    onSubmit({\n      notes: rsvpData.notes,\n      acceptCount: rsvpData.acceptCount || 0,\n      declineCount: rsvpData.declineCount || 0,\n    });\n\n  // @ts-ignore\n  const weddingCountMax = auth?.familyNames?.length || 2;\n\n  return (\n    <form onSubmit={submit}>\n      <div style={{ marginTop: 10, marginBottom: 10 }}>\n        {\n          <div>\n            <div>\n              <div>\n                {t(\"attendingCount\", { count: rsvpData.acceptCount || 0 })}\n              </div>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max={weddingCountMax}\n                step=\"1\"\n                value={rsvpData.acceptCount || 0}\n                id=\"acceptCountCouple\"\n                onChange={(e) =>\n                  setRsvpData((rsvp) => ({\n                    ...rsvp,\n                    acceptCount: parseInt(e.target.value || \"0\", 10),\n                    declineCount: Math.min(\n                      weddingCountMax - parseInt(e.target.value || \"0\", 10),\n                      rsvp.declineCount || 0\n                    ),\n                  }))\n                }\n              />\n            </div>\n            <div>\n              <div>\n                {t(\"decliningCount\", { count: rsvpData.declineCount || 0 })}\n              </div>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max={weddingCountMax}\n                step=\"1\"\n                value={rsvpData.declineCount || 0}\n                onChange={(e) =>\n                  setRsvpData((rsvp) => ({\n                    ...rsvp,\n                    declineCount: parseInt(e.target.value || \"0\", 10),\n                    acceptCount: Math.min(\n                      weddingCountMax - parseInt(e.target.value || \"0\", 10),\n                      rsvp.acceptCount || 0\n                    ),\n                  }))\n                }\n              />\n            </div>\n          </div>\n        }\n\n        <textarea\n          value={rsvpData.notes}\n          placeholder={t(\"rsvpForm.notes\")}\n          onChange={(e) =>\n            setRsvpData((rsvp) => ({ ...rsvp, notes: e.target.value }))\n          }\n        />\n      </div>\n\n      <Button label={t(\"cancel\")} color=\"cancel\" onPress={onCancel} />\n      <Button\n        label={t(\"welcome.enterButton\")}\n        color=\"primary\"\n        onPress={submit}\n        loading={saving}\n      />\n    </form>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AuthData, RSVP_USER, useApiLazyHook } from \"../../queries/constants\";\nimport { mapsLink } from \"../../utils/mapLink\";\nimport { palette } from \"../../utils/styles\";\nimport { Button } from \"../Button/Button\";\nimport {\n  WeddingFormData,\n  WeddingRsvpForm,\n} from \"../WeddingRsvpForm/WeddingRsvpForm\";\n\ninterface Props {\n  auth: AuthData;\n  refetchAuth: () => Promise<void> | void;\n}\n\nexport const WeddingInfo: FC<Props> = ({ auth, refetchAuth }) => {\n  const { t } = useTranslation();\n  const [showMore, setShowMore] = useState(false);\n  const [showRsvpForm, setShowRsvpForm] = useState(false);\n  const [rsvpUser, { loading: savingRsvp }] = useApiLazyHook(RSVP_USER);\n\n  return (\n    <div\n      style={{\n        backgroundColor: palette.secondBackground,\n        width: \"90%\",\n        padding: \"5px 0 0\",\n      }}\n    >\n      <h2>{t(\"weddingInfo.title\")}</h2>\n\n      {showRsvpForm ? (\n        <WeddingRsvpForm\n          auth={auth}\n          onCancel={() => setShowRsvpForm(false)}\n          onSubmit={(weddingData) => {\n            return rsvpUser({\n              name: auth.recordName,\n              zip: auth.zip,\n              wedding: weddingData,\n            })\n              .then(refetchAuth)\n              .then(() => setShowRsvpForm(false));\n          }}\n          saving={savingRsvp}\n        />\n      ) : (\n        <>\n          <div\n            style={{\n              flexDirection: \"row\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginBottom: 15,\n            }}\n          >\n            <div>\n              <div>{t(\"weddingInfo.weddingLocation\")}</div>\n              <div>{t(\"weddingVenue.address\")}</div>\n            </div>\n\n            <div>\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={mapsLink(t(\"weddingVenue.lat\"), t(\"weddingVenue.long\"))}\n                style={{\n                  backgroundColor: palette.background,\n                  padding: 10,\n                  marginLeft: 10,\n                  borderRadius: \"50%\",\n                  borderWidth: 3,\n                  borderColor: palette.tertiary,\n                  borderStyle: \"solid\",\n                  //   boxShadow: \"2px 2px 4px rgba(0,0,0,.5)\",\n                }}\n              >\n                {t(\"clickForMap\")}\n              </a>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n              marginBottom: 15,\n            }}\n          >\n            <div>{t(\"welcome.date\")}</div>\n            <div>{t(\"weddingInfo.time\")}</div>\n          </div>\n\n          {!showMore && (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <a\n                href=\"#\"\n                style={{\n                  padding: \"10px 10px 10px 0\",\n                  color: palette.primary,\n                }}\n                onClick={() => setShowMore(true)}\n              >\n                {t(\"moreInfo\")}\n              </a>\n            </div>\n          )}\n\n          {showMore && (\n            <div className=\"hiddenDescription\" style={{ margin: \"10px 0\" }}>\n              <p\n                style={{\n                  padding: \"10px 10px\",\n                  margin: \"0 10px\",\n                  backgroundColor: palette.background,\n                  borderLeftWidth: 3,\n                  borderLeftStyle: \"solid\",\n                  borderLeftColor: palette.tertiary,\n                  textAlign: \"left\",\n                }}\n              >\n                {t(\"weddingDescriptionText\")}\n              </p>\n            </div>\n          )}\n\n          {auth?.weddingAcceptedCount !== undefined &&\n          auth?.weddingDeclinedCount !== undefined ? (\n            <div>\n              {t(\"weddingRsvp.set\")}\n              <Button\n                label={t(\"updateRsvp\")}\n                color=\"secondary\"\n                onPress={() => setShowRsvpForm(true)}\n              />\n            </div>\n          ) : (\n            <Button\n              label={t(\"setRsvp\")}\n              color={\"primary\"}\n              onPress={() => setShowRsvpForm(true)}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { FC, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AuthData } from \"../../queries/constants\";\nimport { randomImages } from \"../../utils/randomImage\";\nimport { palette } from \"../../utils/styles\";\nimport { useWindowSize } from \"../../utils/useWindowSize\";\nimport { Button } from \"../Button/Button\";\nimport { ReceptionInfo } from \"../ReceptionInfo/ReceptionInfo\";\nimport { WeddingInfo } from \"../WeddingInfo/WeddingInfo\";\n\ninterface Props {\n  auth: AuthData;\n  signout: () => void;\n  refetchAuth: () => void | Promise<void>;\n}\n\nexport const Dashboard: FC<Props> = ({ auth, signout, refetchAuth }) => {\n  const { t } = useTranslation();\n  const { width: screenWidth } = useWindowSize();\n  console.log(auth);\n\n  const width: boolean | undefined = screenWidth\n    ? screenWidth > 500\n    : undefined;\n\n  const bgImage = useMemo(\n    () => screenWidth && randomImages(1)(\"tall\", screenWidth),\n    [width]\n  );\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        backgroundColor: palette.background,\n\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        flex: 1,\n        minHeight: \"100vh\",\n\n        ...(bgImage ? { backgroundImage: `url(${bgImage[0]})` } : {}),\n      }}\n    >\n      <h1>{t(\"userGreeting\", { name: auth.displayName })}</h1>\n\n      {auth.weddingAccess && (\n        <div style={{ marginTop: 10, marginBottom: 10 }}>\n          <WeddingInfo refetchAuth={refetchAuth} auth={auth} />\n        </div>\n      )}\n      {auth.receptionAccess && (\n        <div style={{ marginTop: 10, marginBottom: 10 }}>\n          <ReceptionInfo refetchAuth={refetchAuth} auth={auth} />\n        </div>\n      )}\n      {/* {auth.weddingAcceptedCount &&\n        (auth.weddingAcceptedCount ? (\n          <button>\n            {t(\"dashboard.updateWeddingRsvpButton\", {\n              accepted: auth.weddingAcceptedCount,\n              declined: auth.weddingDeclinedCount,\n            })}\n          </button>\n        ) : (\n          <button>{t(\"dashboard.setWeddingRsvpButton\")}</button>\n        ))} */}\n      <Button color=\"cancel\" onPress={() => signout()} label={t(\"logout\")} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { LoginPage } from \"./components/LoginPage/LoginPage\";\nimport { useAuth } from \"./queries/getAuth\";\nimport { Dashboard } from \"./components/Dashboard/Dashboard\";\n\nfunction App() {\n  const {\n    signIn,\n    signOut,\n\n    results: { data: authData, loading, error },\n  } = useAuth();\n\n  return (\n    <div className=\"App\">\n      {/* <BgTiles /> */}\n      {authData ? (\n        <Dashboard\n          refetchAuth={() =>\n            signIn({ name: authData.recordName, zip: authData.zip }).then(\n              () => undefined\n            )\n          }\n          signout={signOut}\n          auth={authData}\n        />\n      ) : (\n        <LoginPage\n          onSubmit={(d: Parameters<typeof signIn>[0]) => signIn(d)}\n          submitting={loading}\n          error={error}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./i18n\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}